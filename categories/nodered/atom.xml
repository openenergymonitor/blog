<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: NodeRed | Blog | OpenEnergyMonitor]]></title>
  <link href="https://blog.openenergymonitor.org/categories/nodered/atom.xml" rel="self"/>
  <link href="https://blog.openenergymonitor.org/"/>
  <updated>2022-04-12T16:12:50+00:00</updated>
  <id>https://blog.openenergymonitor.org/</id>
  <author>
    <name><![CDATA[Glyn Hudson]]></name>
    <email><![CDATA[support@openenergymonitor.zendesk.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[EcoHome Lab: From Monitoring to Control]]></title>
    <link href="https://blog.openenergymonitor.org/2016/08/ecohomelab-control/"/>
    <updated>2016-08-12T18:00:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2016/08/ecohomelab-control</id>
    <content type="html"><![CDATA[<p>Last night I attended <a href="https://www.meetup.com/Eco-Home-Lab-Manchester/events/230714252/">EcoHomeLab meetup</a> in Manchester organised by the <a href="http://carbon.coop/">CarbonCoop</a>.</p>

<blockquote>
  <p>EcoHomeLab monthly meetups at <a href="https://madlab.org.uk/">MadLab</a> brings householders and green-technologists together to take control of home energy use and generation.</p>
</blockquote>

<p>It was great fun to catch up with regular faces as well as meet many new interesting people.</p>

<p>I gave a short presentation overview of our efforts as OpenEnergyMonitor to make it as easy as possible for people to get started with energy monitoring and control (home automation) with a sustainability / energy saving focus.</p>

<p>I presented the recent work we have been doing to integrate platforms such as MQTT, Node-RED and openHAB ready-installed and pre-configured on the emonPi, our RaspberryPi based energy monitoring platform. These additional platforms run alongside Emoncms on the emonPi.</p>

<p><strong>See the <a href="http://guide.openenergymonitor.org/integrations/">Integrations section of our user guide for more info</a></strong></p>

<p>Here are copy of my slides from the event:</p>

<iframe src="https://docs.google.com/presentation/d/1qSaxiB2tAgMe3ehQ08E9_r340y9HgHUOYvyUvsHd55I/embed?start=false&amp;loop=false&amp;delayms=10000" frameborder="0" width="529" height="426" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true" style="max-width: 100%;"></iframe>

<ul>
  <li>
    <p><a class="attachment" href="https://community.openenergymonitor.org/uploads/default/original/2X/1/1a55b8c172086f743b1b0abe1d01d7c10963d88c.pdf">Download in PDF format</a> (6.8 MB)</p>
  </li>
  <li><a href="https://docs.google.com/presentation/d/1qSaxiB2tAgMe3ehQ08E9_r340y9HgHUOYvyUvsHd55I/pub?start=false&amp;loop=false&amp;delayms=3000">View in HTML (hosted from Google Slides)</a></li>
  <li><a href="https://docs.google.com/presentation/d/1qSaxiB2tAgMe3ehQ08E9_r340y9HgHUOYvyUvsHd55I/edit?usp=sharing">View in full Google Slides format (with clickable hyperlinks &amp; selectable text)</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Outdoor Temperature Data from Weather Underground to Emoncms & MQTT]]></title>
    <link href="https://blog.openenergymonitor.org/2016/02/outdoor-temperature-data-from-weather/"/>
    <updated>2016-02-29T19:08:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2016/02/outdoor-temperature-data-from-weather</id>
    <content type="html"><![CDATA[<p>Monitoring the temperature outside your house is super useful to inform your home automation systems and calculate domestic heating (and dressing!) requirements.<br /><br />One way is to monitor external temperature is to install your own external <a href="http://shop.openenergymonitor.com/emonth-433mhz-temperature-humidity-node/">emonTH wireless temperature node</a> or use a commercial web-connected weather station. However a cheaper way is to tap into the Internet of Things and connect to another weather station in your area.  <a href="https://www.wunderground.com/weather/api/">Weather Underground</a> have over 18K weather stations online in the USA and a <a href="https://www.wunderground.com/weather/api/">free API</a> for non commercial use.<br /><br />Here’s an example of using nodeRED to poll the Weather Underground API and post to Emoncms (using <a href="http://flows.nodered.org/node/node-red-node-emoncms">nodeRED Emoncms flow</a>) and MQTT.</p>

<!--more-->

<p> See bottom of the post for nodeRED flow export which you can import into your nodeRED by pasting into the import box.<br /><br />NodRED included pre-installed on <a href="https://openenergymonitor.org/emon/node/12212">the latest emonPi image (currently in release-candidate)</a>. The Emoncms flow is pre-installed, you will need to add the <a href="http://flows.nodered.org/node/node-red-node-weather-underground">nodeRED Weather Underground</a> flow by connecting via SSH and running :<br /><br />$ rpi-rw<br />$ cd ~/data/node-red<br />$ sudo npm install node-red-node-weather-underground<br />$ rpi-rw<br />$ exit<br /><br />Once installed you will need to paste in your API key and latitude and longitude (or city) into the Weather Underground node.<br /><br /><br />&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="https://2.bp.blogspot.com/-mZJm0O0-xZM/VtSO8FO7O-I/AAAAAAABpIA/9wzoEv7Pz54/s1600/capture%2Bimage.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="290" src="https://2.bp.blogspot.com/-mZJm0O0-xZM/VtSO8FO7O-I/AAAAAAABpIA/9wzoEv7Pz54/s640/capture%2Bimage.png" width="640" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Example NodeRED flow pulling temperature data from Weather Underground to Emoncms and MQTT&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="https://4.bp.blogspot.com/-Q4L4K6rrVkY/VtSSuTC03sI/AAAAAAABpIQ/hXwY9yTgj-A/s1600/capture%2Bimage2.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="224" src="https://4.bp.blogspot.com/-Q4L4K6rrVkY/VtSSuTC03sI/AAAAAAABpIQ/hXwY9yTgj-A/s640/capture%2Bimage2.png" width="640" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Emoncms Internal &amp; External Temperature Multigraph&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="https://3.bp.blogspot.com/-WQkcdh5STpY/VtSVU6WGhAI/AAAAAAABpIc/eWEaw8v0jj8/s1600/capture%2Bimage3.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="640" src="https://3.bp.blogspot.com/-WQkcdh5STpY/VtSVU6WGhAI/AAAAAAABpIc/eWEaw8v0jj8/s640/capture%2Bimage3.png" width="304" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;My openHAB dashboard displaying outdoor temperature and emonPi data from MQTT&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Example nodeRED flow: &lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<span style="font-size: x-small;"><br /></span>&lt;/div&gt;&lt;div style="clear: both; text-align: left;"&gt;<span style="font-size: x-small;">[{“id”:”14e3d598.a7352a”,”type”:”emoncms-server”,”z”:”4cd40f47.6c38f”,”server”:”http://192.168.0.35/emoncms”,”name”:”emonpi”},{“id”:”286b0130.d794fe”,”type”:”mqtt-broker”,”z”:””,”broker”:”192.168.0.35”,”port”:”1883”,”clientid”:””,”usetls”:false,”verifyservercert”:true,”compatmode”:true,”keepalive”:”15”,”cleansession”:true,”willTopic”:””,”willQos”:”0”,”willRetain”:null,”willPayload”:””,”birthTopic”:””,”birthQos”:”0”,”birthRetain”:null,”birthPayload”:””},{“id”:”8e40f136.25c8c”,”type”:”inject”,”z”:”4cd40f47.6c38f”,”name”:”Poke every 30min”,”topic”:””,”payload”:””,”payloadType”:”str”,”repeat”:”1800”,”crontab”:””,”once”:true,”x”:293.33331298828125,”y”:616.3333740234375,”wires”:[[“801e0088.7a2eb”]]},{“id”:”1d8fc53b.c7453b”,”type”:”mqtt out”,”z”:”4cd40f47.6c38f”,”name”:”MQTT: weather/temp”,”topic”:”weather/temp”,”qos”:””,”retain”:””,”broker”:”286b0130.d794fe”,”x”:840,”y”:479,”wires”:[]},{“id”:”9dfe39d9.afac48”,”type”:”debug”,”z”:”4cd40f47.6c38f”,”name”:””,”active”:true,”console”:”false”,”complete”:”payload”,”x”:772,”y”:395,”wires”:[]},{“id”:”c647a520.c30618”,”type”:”debug”,”z”:”4cd40f47.6c38f”,”name”:”View full output”,”active”:true,”console”:”false”,”complete”:”payload”,”x”:581.3333129882812,”y”:589.3333740234375,”wires”:[]},{“id”:”17551590.ce038a”,”type”:”function”,”z”:”4cd40f47.6c38f”,”name”:”Return temp deg C”,”func”:”context.global.outdoor_temp = msg.payload.tempc;  \nreturn {payload:context.global.outdoor_temp};”,”outputs”:1,”noerr”:0,”x”:533.3333129882812,”y”:454.3333435058594,”wires”:[[“1d8fc53b.c7453b”,”9dfe39d9.afac48”,”50f404a6.f89bac”]]},{“id”:”801e0088.7a2eb”,”type”:”wunderground”,”z”:”4cd40f47.6c38f”,”name”:””,”lon”:”-4.1716485”,”lat”:”53.1429426”,”city”:””,”country”:””,”x”:321,”y”:529,”wires”:[[“17551590.ce038a”,”c647a520.c30618”]]},{“id”:”50f404a6.f89bac”,”type”:”emoncms”,”z”:”4cd40f47.6c38f”,”name”:”Emoncms”,”emonServer”:”14e3d598.a7352a”,”nodegroup”:”weather”,”x”:800,”y”:539,”wires”:[]}]</span>&lt;/div&gt;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node-RED Emoncms Node]]></title>
    <link href="https://blog.openenergymonitor.org/2015/11/node-red-emoncms-node/"/>
    <updated>2015-11-15T22:22:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2015/11/node-red-emoncms-node</id>
    <content type="html"><![CDATA[<p><br />I have recently been experimented using <a href="http://nodered.org/">Node-RED</a> for a <a href="http://openenergymonitor.blogspot.co.uk/search/label/NodeRed">number of tasks</a>. Thanks to the work of others a Node-RED flow node already existed for Emoncms making it very easy to post data to Emoncms. For my <a href="http://openenergymonitor.blogspot.co.uk/2015/11/ambient-wind-energy-indicator-using.html">Ambient Wind Energy Indicator</a> I had the need to extract real-time feed data from Emoncms feeds using the Emoncms API. I have now contributed this functionality to the official Node-RED Emoncms node. Using the updated Emoncms node it’s now super easy to post data to extract latest real-time feed values from any Emoncms server including <a href="http://emoncms.org/">Emoncms.org</a>.<br /><br />Get the latest version from: <a href="http://flows.nodered.org/node/node-red-node-emoncms">http://flows.nodered.org/node/node-red-node-emoncms</a>. If you’re interested in viewing and improving the functionality the open-source code behind the node is up on the <a href="https://github.com/node-red/node-red-nodes/tree/master/io/emoncms">Node-RED flows GitHub</a><br /><br />&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://2.bp.blogspot.com/-wVqIG0KV_8k/VkPM0XAJCYI/AAAAAAABi1c/EoNQ2OvDVvs/s1600/emoncms_nodered_node.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-wVqIG0KV_8k/VkPM0XAJCYI/AAAAAAABi1c/EoNQ2OvDVvs/s1600/emoncms_nodered_node.png" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Emoncms Node-RED node&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;Install with:&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;$ cd ~/.node-red&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;$ npm install node-red-node-emoncms&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://1.bp.blogspot.com/-4AtaOCmThHA/VkkD6w2dT6I/AAAAAAABjCU/BbSfVrUgJQc/s1600/Screenshot%2B2015-11-15%2Bat%2B22.14.16.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="640" src="http://1.bp.blogspot.com/-4AtaOCmThHA/VkkD6w2dT6I/AAAAAAABjCU/BbSfVrUgJQc/s640/Screenshot%2B2015-11-15%2Bat%2B22.14.16.png" width="514" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Node Documentation&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://3.bp.blogspot.com/-uCYC7R9TS8E/Vii2O8kylCI/AAAAAAABhRY/IwTzboRY2Pc/s1600/2.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="235" src="http://3.bp.blogspot.com/-uCYC7R9TS8E/Vii2O8kylCI/AAAAAAABhRY/IwTzboRY2Pc/s400/2.png" width="400" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Emoncms in Node Config&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;<br />&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://3.bp.blogspot.com/-eBOVh1G3bsk/Vii2O9QJ0cI/AAAAAAABhRU/QIxOJr5dY20/s1600/3.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="276" src="http://3.bp.blogspot.com/-eBOVh1G3bsk/Vii2O9QJ0cI/AAAAAAABhRU/QIxOJr5dY20/s400/3.png" width="400" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Emoncms Server Config&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ambient Wind Energy Indicator using Node-RED and Blink(1) USB ]]></title>
    <link href="https://blog.openenergymonitor.org/2015/11/ambient-wind-energy-indicator-using/"/>
    <updated>2015-11-04T10:25:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2015/11/ambient-wind-energy-indicator-using</id>
    <content type="html"><![CDATA[<div>As we move to a low carbon electric grid with large amount of input from renewable sources we will need to match our consumption of energy to generation. The wind will not always blow and the sun doesn't always shine. Grid energy storage will play a role, however the closer we can match our consumption of energy to generation the less storage will be required. In the future we can expect dynamic pricing to act as as an incentive for shifting consumption patterns.&nbsp;</div>
<div><br /></div>
<div>As an experiment I have been playing around with creating a real-time ambient indicator of UK wind energy generation. Since wind energy is the greatest input of renewable energy into the UK grid we can assume that when wind generation output is high this is the best time for us to use power e.g. run the washing machine, dish washer etc..&nbsp;</div>
<div class="separator" style="clear: both; text-align: center;"></div>
<div class="separator" style="clear: both; text-align: center;"><br /></div>
<div>I've used <a href="http://emoncms.org/">emoncms.org</a>, &nbsp;Node-RED and a <a href="https://blink1.thingm.com/">ThingM blink(1) USB RGB LED</a>&nbsp;plugged into an <a href="http://shop.openenergymonitor.com/emonpi-1">emonPi</a> energy monitor to create the indicator.<br /><br /><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody><tr><td style="text-align: center;"><a href="http://3.bp.blogspot.com/-MgLolvdJt4w/Vi6jGqzmYbI/AAAAAAABhhE/uCflxGRqya8/s1600/IMG_20151023_164739161%257E01.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="320" src="http://3.bp.blogspot.com/-MgLolvdJt4w/Vi6jGqzmYbI/AAAAAAABhhE/uCflxGRqya8/s320/IMG_20151023_164739161%257E01.jpg" width="239" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;">Real-time wind energy indicator</td></tr></tbody></table><br /><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody><tr><td style="text-align: center;"><a href="http://4.bp.blogspot.com/-zTad-tTlyUE/VjnbfV5tPOI/AAAAAAABiaE/zrYYHpfwjW8/s1600/blinkusb.gif" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="213" src="http://4.bp.blogspot.com/-zTad-tTlyUE/VjnbfV5tPOI/AAAAAAABiaE/zrYYHpfwjW8/s320/blinkusb.gif" width="320" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;">Blink USB Indicator</td></tr></tbody></table><br />First let's install the software to control the Blink(1) USB on the emonPi / RaspberryPi:<br /><br /><i>$ git clone https://github.com/todbot/blink1</i><br /><i>$ sudo cp ~/blink1/linux/51-blink1.rules /etc/udev/rules.d/</i><br /><i>$ sudo udevadm control --reload-rules</i><br />un-plug then re-plug device<br /><i>$ cd blink1/commandline</i><br /><i>$ make</i><br /><br />Note: if Node HID fails to compile you may need to install gcc-4.8. I did not experience this problem using Raspbian Wheezy:&nbsp;<span style="color: #383838; font-family: &quot;monaco&quot; , &quot;courier&quot; , monospace; font-size: 14px; line-height: 1.57143em;"><a href="https://github.com/node-hid/node-hid/issues/115">https://github.com/node-hid/node-hid/issues/115</a></span><br /><span style="color: #383838; font-family: &quot;monaco&quot; , &quot;courier&quot; , monospace; font-size: 14px; line-height: 1.57143em;"><br /></span>Test it's operation by turning on a white LED with<br />$ <i>~/blink1/commandline./blink1-tools --on</i><br /><i><br /></i>To make the Blink(1) USB work with Node-RED we need to install the Blink(1) node-RED flow and libusb driver. If you haven't already got it installed this example also requires the emoncms noe-RED flow to pull data from emoncms.org<br /><br /><i>$ sudo apt-get install libusb-1.0-0.dev</i><br /><i>$ cd ~/.node-red</i><br /><i>$ npm install node-red-node-blink1</i><br /><i>$ npm install node-red-node-emoncms</i><br /><br />Then restart node-RED.<br /><br />Node-RED makes it super easy to link the required software components together, with pre built nodes available for emoncms and Blink USB it's just a case of linking the nodes together and adding some logic. Here is now node-RED flow, see node-RED export at bottom of this post:<br /><br /></div>
<div><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-9_rpddNkZsA/VjnUJ2AYmOI/AAAAAAABiZQ/PVepjwwO6Jo/s1600/Node_RED_Emoncms_WindEnergy.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="208" src="http://4.bp.blogspot.com/-9_rpddNkZsA/VjnUJ2AYmOI/AAAAAAABiZQ/PVepjwwO6Jo/s640/Node_RED_Emoncms_WindEnergy.png" width="640" /></a></div><br /></div>
<div>We have a script running on emoncms.org to pull in real-time UK wind energy generation. We have been logging this data for almost a year now. Checkout the dashboard here: <a href="http://emoncms.org/mywindpower/ukwind">http://emoncms.org/mywindpower/ukwind</a>.<br /><br /><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody><tr><td style="text-align: center;"><a href="http://3.bp.blogspot.com/-zr6-pnRM68Q/Vjnc8gUs1gI/AAAAAAABiaU/7h__EuOz9ps/s1600/Emoncms_my_wind.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="253" src="http://3.bp.blogspot.com/-zr6-pnRM68Q/Vjnc8gUs1gI/AAAAAAABiaU/7h__EuOz9ps/s400/Emoncms_my_wind.png" width="400" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;"><a href="http://emoncms.org/mywindpower/ukwind" style="font-size: medium; text-align: start;">http://emoncms.org/mywindpower/ukwind</a></td></tr></tbody></table><br />The read API key for this account is <i>8f5c2d146c0c338845d2201b8fe1b0e1</i> and the feed ID is&nbsp;<span style="background-color: whitesmoke; color: #333333; font-family: &quot;helvetica neue&quot; , &quot;helvetica&quot; , &quot;arial&quot; , sans-serif; font-size: 14px; line-height: 20px;"><i>67088</i></span>. To pull the real time data into&nbsp;node red just plug in the &nbsp;api key and feed ID into the <a href="http://flows.nodered.org/node/node-red-node-emoncms">node-RED emoncms in node</a>. Node-RED will then execute the following GET request:</div>
<div><a href="https://www.blogger.com/goog_896110156"><br /></a><b><a href="http://emoncms.org/feed/value.json?id=67088&amp;apikey=8f5c2d146c0c338845d2201b8fe1b0e1">http://emoncms.org/feed/value.json?id=67088&amp;apikey=8f5c2d146c0c338845d2201b8fe1b0e1</a></b><br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-eBOVh1G3bsk/Vii2O9QJ0cI/AAAAAAABhRE/BlMdaoiDjsQ/s1600/3.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="275" src="http://4.bp.blogspot.com/-eBOVh1G3bsk/Vii2O9QJ0cI/AAAAAAABhRE/BlMdaoiDjsQ/s400/3.png" width="400" /></a></div><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-uCYC7R9TS8E/Vii2O8kylCI/AAAAAAABhRA/0AtBR80rNP0/s1600/2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="235" src="http://1.bp.blogspot.com/-uCYC7R9TS8E/Vii2O8kylCI/AAAAAAABhRA/0AtBR80rNP0/s400/2.png" width="400" /></a></div><b><br /></b></div>
<div><br />The blink usb node requires RGB csv to represent a colour output. A node is used to map the generation 0 - &nbsp;7000 MW (currently!) to 0 - 255 RGB representation.&nbsp;</div>
<div><br /></div>
<div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-WlNB7c0DlW8/Vii2PYXKUBI/AAAAAAABhRQ/hNDNr07dFlg/s1600/4.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="400" src="http://1.bp.blogspot.com/-WlNB7c0DlW8/Vii2PYXKUBI/AAAAAAABhRQ/hNDNr07dFlg/s400/4.png" width="390" /></a></div>
<p><br /><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-GhZ2U4h9ckY/Vii2PiJSKlI/AAAAAAABhRM/4a-Vlm5vXoM/s1600/5.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="400" src="http://4.bp.blogspot.com/-GhZ2U4h9ckY/Vii2PiJSKlI/AAAAAAABhRM/4a-Vlm5vXoM/s400/5.png" width="391" /></a>&lt;/div&gt;<br /><br /><span style="font-family: Arial, Helvetica, sans-serif; font-size: xx-small;">[{“id”:”98c24074.673dc”,”type”:”emoncms-server”,”server”:”http://emoncms.org”,”name”:”emoncms UK windpower”},{“id”:”5a3294d0.a5cd6c”,”type”:”function”,”name”:”Create RGB values CSV”,”func”:”// convert to integer \n//var wind = +msg.payload;\n\n// green = 255 @ max wind output\nvar g = msg.payload\n\n// red = 255 @ zero wind output\nvar r= 255 - msg.payload\n\n// Round to whole number\ng = Number((g).toFixed(0));\nr = Number((r).toFixed(0));\n\nvar csv = r + "," + g + "," + 0;\nreturn {payload:csv};”,”outputs”:1,”noerr”:0,”x”:617,”y”:348,”z”:”c0b0c402.3f4f38”,”wires”:[[“52d8719f.ad279”,”f3dd00d0.0c23”]]},{“id”:”6ec040ed.913fc”,”type”:”inject”,”name”:”Trigger every 10min 7AM-11PM”,”topic”:””,”payload”:”1445415635”,”payloadType”:”string”,”repeat”:””,”crontab”:”*/10 7-22 * * *”,”once”:false,”x”:297,”y”:261,”z”:”c0b0c402.3f4f38”,”wires”:[[“68f8d790.970728”]]},{“id”:”52d8719f.ad279”,”type”:”debug”,”name”:””,”active”:false,”console”:”false”,”complete”:”false”,”x”:878,”y”:334,”z”:”c0b0c402.3f4f38”,”wires”:[]},{“id”:”b5d43139.4a2bd”,”type”:”inject”,”name”:”Test 100MW”,”topic”:””,”payload”:”100”,”payloadType”:”string”,”repeat”:””,”crontab”:””,”once”:false,”x”:223,”y”:421,”z”:”c0b0c402.3f4f38”,”wires”:[[“2da76a85.d25896”]]},{“id”:”9122dd65.6edd2”,”type”:”inject”,”name”:”Test 2000 MW”,”topic”:””,”payload”:”2500”,”payloadType”:”string”,”repeat”:””,”crontab”:””,”once”:false,”x”:225,”y”:469,”z”:”c0b0c402.3f4f38”,”wires”:[[“2da76a85.d25896”]]},{“id”:”b5c8e6e5.4a3718”,”type”:”inject”,”name”:”Test 5000MW”,”topic”:””,”payload”:”5000”,”payloadType”:”string”,”repeat”:””,”crontab”:””,”once”:true,”x”:224,”y”:514,”z”:”c0b0c402.3f4f38”,”wires”:[[“2da76a85.d25896”]]},{“id”:”f3dd00d0.0c23”,”type”:”blink1”,”fade”:”600”,”name”:”Blink(1) USB”,”x”:847,”y”:440,”z”:”c0b0c402.3f4f38”,”wires”:[]},{“id”:”68f8d790.970728”,”type”:”emoncms in”,”name”:”Get UK wind generation output from emoncm.org”,”emonServer”:”98c24074.673dc”,”feedid”:”67087”,”x”:263,”y”:343,”z”:”c0b0c402.3f4f38”,”wires”:[[“2da76a85.d25896”]]},{“id”:”2da76a85.d25896”,”type”:”range”,”minin”:”0”,”maxin”:”6000”,”minout”:”0”,”maxout”:”255”,”action”:”clamp”,”round”:true,”name”:”Range: Scale wind output to RGB value”,”x”:551,”y”:417,”z”:”c0b0c402.3f4f38”,”wires”:[[“5a3294d0.a5cd6c”]]},{“id”:”64a3fa26.9b5c04”,”type”:”inject”,”name”:”Turn off after 11PM”,”topic”:””,”payload”:”0,0,0”,”payloadType”:”string”,”repeat”:””,”crontab”:”01 23 * * *”,”once”:false,”x”:613,”y”:488,”z”:”c0b0c402.3f4f38”,”wires”:[[“f3dd00d0.0c23”]]}]</span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[emonPi, NodeRed and MQTT]]></title>
    <link href="https://blog.openenergymonitor.org/2015/10/emonpi-nodered-and-mqtt/"/>
    <updated>2015-10-12T10:52:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2015/10/emonpi-nodered-and-mqtt</id>
    <content type="html"><![CDATA[<p>Using the <a href="http://openenergymonitor.org/emon/modules/emonpi">emonPi in it’s default configuration</a> works great to post data to Emoncms for logging and visualisation. However there may be times when you want some more flexibility and or ability to interface with other hardware.<br /><br />Using a tool called <a href="http://nodered.org/">Node-Red</a> the emonPi can become a central hub for home automation, control and notification. Node-RED is a tool for wiring together hardware devices, APIs and online services in new and interesting ways. At the heart of Node-RED is a visual editor allowing complex data flows to be wired together with only a little coding skills.  Here are some of my ideas of things I might like to achieve with Node-RED, For more inspiration check out <a href="http://www.youtube.com/watch?v=KPnwyTgZaS0&amp;t=29m18s">Martin’s IoT Google hangout 29min in</a>:<br /><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-dLsVZfkrCk8/Vm2c8jR7OVI/AAAAAAABksA/oPCn7WCPE9U/s1600/node-red.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="200" src="http://4.bp.blogspot.com/-dLsVZfkrCk8/Vm2c8jR7OVI/AAAAAAABksA/oPCn7WCPE9U/s200/node-red.png" width="200" /></a>&lt;/div&gt;<br />&lt;ul&gt;&lt;li&gt;Send power consumption notifications to my phone using <a href="http://flows.nodered.org/node/node-red-node-pushover">Node-RED and Pushover</a>&lt;/li&gt;&lt;li&gt;Send a notification to my phone when it’s a good time to use power e.g <a href="https://gist.github.com/dceejay/6572686">national power demand </a>is low and grid renewable generation input is high&lt;/li&gt;&lt;li&gt;Use an emonTH as a room thermostat temperature input to control my heating using <a href="http://shop.openenergymonitor.com/three-channel-wifi-relay-thermostat/">WiFi MQTT relay board</a> (blog post coming soon… :-) )&lt;/li&gt;&lt;li&gt;Switch my heating on when I arrive home using <a href="https://harizanov.com/2015/03/making-ifttt-if-this-then-that-talk-to-node-red/">node-RED and IFTT</a> android / iOS location &lt;/li&gt;&lt;li&gt;Post energy data to another service e.g. thingspeak.com, pvoutput.org, xively.com etc..&lt;/li&gt;&lt;li&gt;Use <a href="http://flows.nodered.org/node/node-red-node-emoncms">node-RED to post data from other services to Emoncms</a> e.g <a href="https://gist.github.com/dceejay/6572686">national power demand</a>, home weather station, <a href="http://flows.nodered.org/node/node-red-node-openweathermap">weather forecast</a>  &lt;/li&gt;&lt;li&gt;Periodically tweet my home power consumption or solar PV output&lt;/li&gt;&lt;li&gt;Set an email when you emonTH batteries run low (see example below)&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;<b>Install Node-RED on emonPi / emonHub / Raspberry Pi </b>&lt;/h3&gt;Make emonPi file-system RW:<br /><i>$ rpi-rw</i><br /><br />Install Node-RED (taken from <a href="http://nodered.org/docs/hardware/raspberrypi.html">node-RED RaspberryPi install guide</a>):<br /><i>$ curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash - </i><br /><i>$ sudo apt-get install -y build-essential python-dev python-rpi.gpio nodejs</i><br /><i>$ sudo npm install -g –unsafe-perm node-red</i><br /><i><br /></i>Open up port 1880 so we can access Node-RED editor:<br /><i>$ sudo iptables -A INPUT -p tcp -m tcp –dport 1880 -j ACCEPT</i><br /><i><br /></i>Open up port 1883 so we can access MQTT server:<br /><i>$ sudo iptables -A INPUT -p tcp -m tcp –dport 1883 -j ACCEPT</i><br /><i><br /></i>Make iptables rules persistent<br />$ apt-get install iptables-persistent<br /><br />Choose yes to save rules, if needed edit the persistent rules:<br />$ sudo nano /etc/iptables/rules.v4<br /><br /><i><br /></i>Start Node-RED with:<br /><i>$ node-red-pi –max-old-space-size=128</i><br /><br />To view the node-RED graphical editor browse to:<br /><a href="http://emonpi:1880/">http://emonpi:1880/</a> (or use IP address if this does not work)<br /><br />To use Node-RED as a permanent setup you will want to <a href="https://gist.github.com/bigmonkeyboy/9962293">set it up as a service to autostart at boot</a> and e<a href="http://nodered.org/docs/security.html">nable secure authentication access to node-RED editor</a>.<br /><br />When you are done don’t forget to put the emonPi back to read-only mode to preserve SD card lifespan:<br /><i>$ rpi-ro</i><br />&lt;div&gt;<br />&lt;/div&gt;&lt;h3&gt;<b>Getting data from the emonPi into Node-RED</b>&lt;/h3&gt;There are two options to get our energy data into Node-RED:<br /><br /><b>1. Real-time data from emonHub using MQTT (see example below):</b><br /><br /><a href="http://mqtt.org/">MQTT</a> is a lightweight communication protocol for small web-connected devices. The latest version of emonHub as setup on the emonPi (and emonHub from July 15) uses MQTT as a link to Emoncms and also to provide data to the emonPi LCD script. Since MQTT is already running all we need to do is to point Node-RED MQTT input block to subscribe to the <i>‘emonhub/rx/#</i>’ MQTT topic on port 1883. The ‘#’ topic includes data received from all nodes. To subscribe to just one node use e.g. emonPi use: <i>‘emonhub/5/values’ </i>or ‘<i>emonhub/10/values’</i> for emonTx.<br /><br />To subscribe the the emonPi’s MQTT topics externally (if your running node-RED on another machine) you will need to open up the MQTT port on the emonPi:<br /><br /><i>$ sudo iptables -A INPUT -p tcp -m tcp –dport 1883 -j ACCEPT</i><br /><br /><b>2. Historic data from Emoncms using HTTP API: </b><br /><br />To pull historic data already logged to Emoncms (e.g KWh data) into Node-RED we can use Emoncms’s API. Here is a simple example to pull in the latest value from the KWh feed, just enter your RW API key and feed ID:<br /><br /><a href="http://emoncms.org/feed/value.json&amp;apikey=APIKEY&amp;id=FEED_ID">http://emoncms.org/feed/value.json&amp;apikey=APIKEY&amp;id=FEED_ID</a><br /><br />To view all Emoncms API see: <a href="http://emoncms.org/input/api">http://emoncms.org/input/api</a><br /><br />&lt;h3&gt;<b>Node-RED example: send warning email when emonTH battery is low</b>&lt;/h3&gt;<b><br /></b>Simple but useful example, use Node-RED connecting to emonPi in real-time data via MQTT (localhost) and sending email (via Gmail SMTP) if emonTH battery drops below 1.7V. Also in this flow as an example is a node to decode emonPi power data. <br /><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-gfgkoEkv-HY/VhuGvzIzqOI/AAAAAAABg6Q/BUKxbYx6IG0/s1600/Screenshot%2B2015-10-12%2Bat%2B11.05.39.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="204" src="http://4.bp.blogspot.com/-gfgkoEkv-HY/VhuGvzIzqOI/AAAAAAABg6Q/BUKxbYx6IG0/s640/Screenshot%2B2015-10-12%2Bat%2B11.05.39.png" width="640" /></a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Here is the contents of each node: &lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-QdCMAYzfeZw/VhuGuzSG1fI/AAAAAAABg6M/b0b31YoUcPA/s1600/Node%2BRED%2B%2B%2Bemonpi.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="179" src="http://4.bp.blogspot.com/-QdCMAYzfeZw/VhuGuzSG1fI/AAAAAAABg6M/b0b31YoUcPA/s320/Node%2BRED%2B%2B%2Bemonpi.png" width="320" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;MQTT Node subscribing to emonhub mqtt topic on localhost (running node-RED on emonPi)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-ANX-AiX1Vg0/VhuGvI8h5wI/AAAAAAABg6U/wNu2U69oiwU/s1600/Node%2BRED%2B%2B%2Bemonpi1.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="293" src="http://4.bp.blogspot.com/-ANX-AiX1Vg0/VhuGvI8h5wI/AAAAAAABg6U/wNu2U69oiwU/s320/Node%2BRED%2B%2B%2Bemonpi1.png" width="320" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Separate node to split the MQTT data up into nodes based on ID: e.g emonTx = 10, emonPi = 5, emonTH = 19&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-wM8zp4WGrCk/VhuGvBsYP1I/AAAAAAABg6g/KJAxe8zI53M/s1600/Node%2BRED%2B%2B%2Bemonpi2.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="375" src="http://4.bp.blogspot.com/-wM8zp4WGrCk/VhuGvBsYP1I/AAAAAAABg6g/KJAxe8zI53M/s400/Node%2BRED%2B%2B%2Bemonpi2.png" width="400" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;CSV node to split up MQTT CSV string&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-NemcPlwD1Ws/VhuGvVuEs6I/AAAAAAABg6Y/XkUBKmteqrE/s1600/Node%2BRED%2B%2B%2Bemonpi3.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="400" src="http://4.bp.blogspot.com/-NemcPlwD1Ws/VhuGvVuEs6I/AAAAAAABg6Y/XkUBKmteqrE/s400/Node%2BRED%2B%2B%2Bemonpi3.png" width="361" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;If function node&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://2.bp.blogspot.com/-1mzPm3DVvVU/VhuGvi-MFlI/AAAAAAABg6c/KCFuKqCADrE/s1600/Node%2BRED%2B%2B%2Bemonpi4.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="278" src="http://2.bp.blogspot.com/-1mzPm3DVvVU/VhuGvi-MFlI/AAAAAAABg6c/KCFuKqCADrE/s320/Node%2BRED%2B%2B%2Bemonpi4.png" width="320" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;email node, enter your Gmail (or otherwise) SMTP login&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;Node-RED flow export, import by copy and pasting into import&gt;clipboard in Node-RED editor:<br /><br /><i><span style="font-size: xx-small;">[{“id”:”eb57a13e.14a86”,”type”:”mqtt-broker”,”broker”:”localhost”,”port”:”1883”,”clientid”:””},{“id”:”44c7eefa.bb381”,”type”:”mqtt in”,”name”:”MQTT: emonhub/rx/#”,”topic”:”emonhub/rx/#”,”broker”:”eb57a13e.14a86”,”x”:159,”y”:386,”z”:”fa6ca080.05936”,”wires”:[[“2c7fcc53.d38034”,”eb7e04d9.1481f8”]]},{“id”:”2c7fcc53.d38034”,”type”:”debug”,”name”:”RAW MQTT output: emonhub/rx/#”,”active”:false,”console”:”false”,”complete”:”topic”,”x”:242,”y”:461,”z”:”fa6ca080.05936”,”wires”:[]},{“id”:”eb7e04d9.1481f8”,”type”:”switch”,”name”:”Seperate Nodes”,”property”:”topic”,”rules”:[{“t”:”cont”,”v”:”5”},{“t”:”cont”,”v”:”19”},{“t”:”cont”,”v”:”20”}],”checkall”:”true”,”outputs”:3,”x”:343,”y”:317,”z”:”fa6ca080.05936”,”wires”:[[“b0618044.4f9e8”],[“9077dea0.6f882”],[]]},{“id”:”9077dea0.6f882”,”type”:”csv”,”name”:”emonTH 1: emonhub/19/values &gt; Decode MQTT CSV”,”sep”:”,”,”hdrin”:””,”hdrout”:””,”multi”:”one”,”ret”:”\n”,”temp”:”temp,temp_external,humidity,battery,pulsecount”,”x”:664,”y”:373,”z”:”fa6ca080.05936”,”wires”:[[“75ee731f.8a118c”]]},{“id”:”b0618044.4f9e8”,”type”:”csv”,”name”:”emonPi: emonhub/5/values &gt; Decode MQTT CSV”,”sep”:”,”,”hdrin”:””,”hdrout”:””,”multi”:”one”,”ret”:”\n”,”temp”:”power1,power2,power1_plus_2,Vrms,temp1,temp2,temp3,temp4,temp5,temp6,pulseCount”,”x”:647,”y”:236,”z”:”fa6ca080.05936”,”wires”:[[“cda897fa.325768”]]},{“id”:”cda897fa.325768”,”type”:”debug”,”name”:”Debug: emonPi Power1 output”,”active”:false,”console”:”false”,”complete”:”payload.power1”,”x”:1015,”y”:235,”z”:”fa6ca080.05936”,”wires”:[]},{“id”:”75ee731f.8a118c”,”type”:”function”,”name”:”If emonTH battery &lt; 1.7V”,”func”:”if (msg.payload.battery &lt; 1.7) {\n   return {payload:’WARNING: emonTH battery low  ‘+msg.payload.battery+’V’  };\n}”,”outputs”:1,”noerr”:0,”x”:1015,”y”:363,”z”:”fa6ca080.05936”,”wires”:[[“f8d8fd72.0727”]]},{“id”:”f8d8fd72.0727”,”type”:”delay”,”name”:”Limit 1 email per day”,”pauseType”:”rate”,”timeout”:”5”,”timeoutUnits”:”seconds”,”rate”:”1”,”rateUnits”:”day”,”randomFirst”:”1”,”randomLast”:”5”,”randomUnits”:”seconds”,”drop”:true,”x”:948,”y”:447,”z”:”fa6ca080.05936”,”wires”:[[“1d4154b2.e2beab”]]},{“id”:”1d4154b2.e2beab”,”type”:”e-mail”,”server”:”smtp.gmail.com”,”port”:”465”,”name”:””,”dname”:”Send warning email”,”x”:1198,”y”:439,”z”:”fa6ca080.05936”,”wires”:[]}]</span></i></p>
]]></content>
  </entry>
  
</feed>
