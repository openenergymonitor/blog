<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: pluse | Blog | OpenEnergyMonitor]]></title>
  <link href="https://blog.openenergymonitor.org/categories/pluse/atom.xml" rel="self"/>
  <link href="https://blog.openenergymonitor.org/"/>
  <updated>2020-02-14T18:33:22+00:00</updated>
  <id>https://blog.openenergymonitor.org/</id>
  <author>
    <name><![CDATA[Glyn Hudson]]></name>
    <email><![CDATA[support@openenergymonitor.zendesk.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reading Watt-hour data from an Elster A100C electricity meter using IrDA by Dave Berkeley part 2]]></title>
    <link href="https://blog.openenergymonitor.org/2012/08/reading-watt-hour-data-from-elster/"/>
    <updated>2012-08-27T11:02:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2012/08/reading-watt-hour-data-from-elster</id>
    <content type="html"><![CDATA[<div><div style="text-align: center;"></div><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-O6Rbpza8DRI/UDtMZHQNG7I/AAAAAAAACeo/i6Xx0PCuLdo/s1600/IMAG0876.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-O6Rbpza8DRI/UDtMZHQNG7I/AAAAAAAACeo/i6Xx0PCuLdo/s1600/IMAG0876.jpg" /></a></div><br /><br />As mentioned <a href="http://openenergymonitor.blogspot.co.uk/2012/07/reading-watt-hour-data-from-elster.html">before</a> if you have an Elster meter this is a fantastic way to read the exact accumulated watt hours that you have generated or used and can compliment and cross check a CT based measurement.<br /><br />Dave Berkeley has now packaged the code into a nice library which makes it really easy to use. We have uploaded the library to a repository on github here:&nbsp;<a href="https://github.com/openenergymonitor/ElsterMeterReader">https://github.com/openenergymonitor/ElsterMeterReader</a><br /><br /><b>How to build it</b><br /><b><br /></b>1) To build the <a href="http://shop.openenergymonitor.com/tsl261r-ir-sensor-kit/">TSL261R</a> based sensor for use with the emontx, follow the jack plug connection diagram on the emontx reference page here:&nbsp;<a href="http://openenergymonitor.org/emon/emontx/reference%20">http://openenergymonitor.org/emon/emontx/reference</a><br /><br />We've put together a small kit <a href="http://shop.openenergymonitor.com/tsl261r-ir-sensor-kit/">available in the shop</a> of all the components needed to connect it to an emontx including the TSL261R a male 3.5mm jack, 1m of cable and heat-shrink.<br /><br />2) Plug the sensor into the pulse input on the emontx (digital pin 3,&nbsp;interrupt&nbsp;pin 1)<br /><br />3) Download the ElsterMeterReader library and place in the arduino libraries folder.<br /><br />4) Open the Arduino IDE and run the following example:<br /><br /><pre>#include&nbsp;<span style="color: #006699;">"elster.h"</span><br /><br /><span style="color: #cc6600;">void</span> meter_reading(<span style="color: #cc6600;">unsigned</span> <span style="color: #cc6600;">long</span> r)<br />{<br />&nbsp;&nbsp;<span style="color: #cc6600;"><b>Serial</b></span>.<span style="color: #cc6600;">print</span>(r);<br />&nbsp;&nbsp;<span style="color: #cc6600;"><b>Serial</b></span>.<span style="color: #cc6600;">print</span>(<span style="color: #006699;">"\r\n"</span>);<br />}<br /><br />ElsterA100C&nbsp;meter(meter_reading);<br /><br /><span style="color: #cc6600;">void</span> <span style="color: #cc6600;"><b>setup</b></span>()<br />{<br />&nbsp;&nbsp;<span style="color: #cc6600;"><b>Serial</b></span>.<span style="color: #cc6600;">begin</span>(9600);<br />&nbsp;&nbsp;<span style="color: #cc6600;"><b>Serial</b></span>.<span style="color: #cc6600;">println</span>(<span style="color: #006699;">"IRDA Meter reader"</span>);<br />&nbsp;&nbsp;meter.init(1);<br />}<br /><span style="color: #cc6600;">void</span> <span style="color: #cc6600;"><b>loop</b></span>()<br />{<br />&nbsp;&nbsp;<span style="color: #7e7e7e;">// Decode the meter stream</span><br />&nbsp;&nbsp;<span style="color: #cc6600;">const</span> <span style="color: #cc6600;">int</span> byte_data = meter.decode_bit_stream();<br />&nbsp;&nbsp;<span style="color: #cc6600;">if</span> (byte_data != -1) {<br />&nbsp;&nbsp;&nbsp;&nbsp;meter.on_data(byte_data);<br />&nbsp;&nbsp;}<br />}</pre><br />5) If you now go to the serial window and place the sensor over the IrDA port (bottom-left of the meter) you should see the Watt-hours elapsed printed out to the serial window:<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-fyAeGjqtaYw/UDtTSJ4AtNI/AAAAAAAACe4/nJS88EiX8lc/s1600/outputirda.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-fyAeGjqtaYw/UDtTSJ4AtNI/AAAAAAAACe4/nJS88EiX8lc/s1600/outputirda.png" /></a></div><div class="separator" style="clear: both; text-align: center;"><br /></div><div class="separator" style="clear: both; text-align: left;">Thanks a lot to Dave Berkeley for this, for more information see his project page:&nbsp;<a href="http://www.rotwang.co.uk/projects/meter.html">http://www.rotwang.co.uk/projects/meter.html</a></div></div>
]]></content>
  </entry>
  
</feed>
