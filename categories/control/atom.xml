<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: control | Blog | OpenEnergyMonitor]]></title>
  <link href="https://blog.openenergymonitor.org/categories/control/atom.xml" rel="self"/>
  <link href="https://blog.openenergymonitor.org/"/>
  <updated>2020-02-14T18:33:22+00:00</updated>
  <id>https://blog.openenergymonitor.org/</id>
  <author>
    <name><![CDATA[Glyn Hudson]]></name>
    <email><![CDATA[support@openenergymonitor.zendesk.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Remote Control of LightWave RF plugs via MQTT using emonPi with OOK Tx]]></title>
    <link href="https://blog.openenergymonitor.org/2015/11/remote-control-of-lightwave-rf-plugs/"/>
    <updated>2015-11-26T17:09:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2015/11/remote-control-of-lightwave-rf-plugs</id>
    <content type="html"><![CDATA[<p>Using a Raspberry Pi as an emonPi / emonBase web-connected base station for energy monitoring has many advantages (maintainability, remote access, debugging, updated etc.) but it does seem rather wasteful to have a 900Mhz 1GB RAM machine being used to post a couple of integers to a web-server! The always-on nature of a web-connected base station and plenty of spare processing power makes it ideal to use the emonPi for more than just energy monitoring; home automation and heating control optimisation are obvious candidates. <br /><br /><br /><b>Hardware</b><br /><b><br /></b>Many home automation products such as RF plugs, relays and heating remotes use a simple OOK (On-Off-Keying) wireless protocol. UK company LightWaveRF produce a <a href="http://www.megamanuk.com/lightwaverf/products/power-control/">variety of RF plugs</a> and <a href="http://www.megamanuk.com/lightwaverf/products/inline-switching/jsjslw830/">relays</a> which can be controlled via OOK RF. The protocol is also compatible with some <a href="http://www.ebay.co.uk/itm/321887470042?_trksid=p2057872.m2749.l2649&amp;var=510834121070&amp;ssPageName=STRK%3AMEBIDX%3AIT">cheaper OOK learning receiver relays</a>.  While maybe not strictly open-source the protocol and been reverse engineered allowing plugs to be easily controlled from Arduino / Raspberry Pi. There is an active <a href="http://lightwaverfcommunity.org.uk/forum/">LightWaveRF</a> online community. Using off-the shelf hardware like this is a ‘safe’ way to control lights, heaters and appliances  around a home without getting our hands dirty dealing with with high voltages. These plugs and relays can be used to control anything from lights to immersion heaters, most LightWaveRF plugs/relays will switch up to 13A / 3kW.<br /><br />Note: OOK protocol by it’s simplistic nature is not particularly secure, I would not recommend controlling anything you don’t mind getting accidently switched.<br />&lt;div&gt;<br />&lt;/div&gt;An OOK transmitter can easily be added to the emonPi.  We have started stocking <a href="http://shop.openenergymonitor.com/ook-on-off-keying-transmitter-433mhz/">OOK transmitter modules in the OpenEnergyMonitor store</a> as well as adding an option to have OOK module factory installed on <a href="http://shop.openenergymonitor.com/emonpi/">new emonPi’s</a>. <br /><br />See <a href="http://wiki.openenergymonitor.org/index.php?title=EmonPi#OOK">emonPi Technical Hardware Wiki</a> for details how to retrofit OOK TX module to existing emonPi’s.<br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://3.bp.blogspot.com/-ooKdNYl_8fA/Vlc-c0pyyJI/AAAAAAABj5o/M6wlA5rH_Ko/s1600/emonPi_lwrf.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="640" src="http://3.bp.blogspot.com/-ooKdNYl_8fA/Vlc-c0pyyJI/AAAAAAABj5o/M6wlA5rH_Ko/s640/emonPi_lwrf.png" width="600" /></a>&lt;/div&gt;<br /> <b>Software</b><br /><br />We have been working with <a href="https://github.com/lawrie">Lawrie Griffiths</a> from <a href="https://geekgrandad.wordpress.com/">Geek Grandad blog</a> to develop a <a href="https://github.com/lawrie/LightwaveRF">LightWaveRF MQTT service</a> to run on a Raspberry Pi to allow LightWaveRF plugs to be controlled via MQTT.<br /><br />&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="https://www.electricalsupplies.co.uk/media/catalog/product/0/0/0019040_megaman-lightwave-rf-handheld-remote-controller-white.jpeg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="320" src="https://www.electricalsupplies.co.uk/media/catalog/product/0/0/0019040_megaman-lightwave-rf-handheld-remote-controller-white.jpeg" width="213" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;<br />&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Once running a plug can be controlled by publishing to the ‘lwrf’ MQTT topic:<br /><br />E.g “1 1” switches on plug 1 while “1 0” switches off plug 1. Plugs can be paired in the usual LightWaveRF plug.<br /><br /><b>See <a href="http://wiki.openenergymonitor.org/index.php/EmonPi#LightWaveRF_OOK">emonPi technical Wiki</a> for how to install &amp; setup</b>.<br /><br />Existing LightWaveRF remotes can be emulated allowing plugs to be controlled from either emonPi MQTT or via the remote.<br /><br />Now our plugs can be controlled via MQTT there are a many of options open as to how to control either via interface openHAB (blog post coming soon..), nodeRED, android Tasker etc.<br /><br />I have been using nodeRED with input from android <a href="http://owntracks.org/">OwnTracks</a> running on my phone to detect when I’m home and turn on a couple of lights:<br /><br />&lt;div class="" style="clear: both; text-align: center;"&gt;<b>Demo:</b>&lt;/div&gt;&lt;div class="" style="clear: both; text-align: center;"&gt;<b><br /></b>&lt;/div&gt;&lt;div class="" style="clear: both; text-align: center;"&gt;Using NodeRED and OwnTracks to turn on LightWave RF sockets when I arrive home: &lt;/div&gt;&lt;div class="" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;<a href="http://3.bp.blogspot.com/-gt2MVmKylsk/VlOTJKgRb5I/AAAAAAABjrQ/hZUctXS_e_s/s1600/Screenshot%2B2015-11-23%2Bat%2B22.28.06.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="280" src="http://3.bp.blogspot.com/-gt2MVmKylsk/VlOTJKgRb5I/AAAAAAABjrQ/hZUctXS_e_s/s640/Screenshot%2B2015-11-23%2Bat%2B22.28.06.png" width="640" /></a>&lt;/div&gt;<b><br /></b>&lt;iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/GVKXgS01Vqw/0.jpg" frameborder="0" height="266" src="https://www.youtube.com/embed/GVKXgS01Vqw?feature=player_embedded" width="320"&gt;&lt;/iframe&gt;<br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;Using android Tasker with  AutoVoice and MQTT plugins to control LightWaveRF sockets:&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/QjIqo4QsywA/0.jpg" frameborder="0" height="266" src="https://www.youtube.com/embed/QjIqo4QsywA?feature=player_embedded" width="320"&gt;&lt;/iframe&gt;<br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<b>Next Steps</b>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;Now we can control appliances remotely via MQTT the next logical step is to add a mobile user interface. In my next blog post I plan to explore setting up <a href="http://www.openhab.org/">openHab</a> to control appliances. Here’s a early preview: &lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/6uF0qU30q-g/0.jpg" frameborder="0" height="266" src="https://www.youtube.com/embed/6uF0qU30q-g?feature=player_embedded" width="320"&gt;&lt;/iframe&gt;<br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;We plan to include out-of-the-box support for OOK LightWave RF, nodeRED and openHab pre-configured on our next emonPi pre-built SD card. Due for release in December 2015.&lt;/div&gt;<br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3CH WiFi Relay Control Board]]></title>
    <link href="https://blog.openenergymonitor.org/2015/08/3ch-wifi-relay-control-board/"/>
    <updated>2015-08-22T12:38:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2015/08/3ch-wifi-relay-control-board</id>
    <content type="html"><![CDATA[<div class="separator" style="clear: both; text-align: left;"><br /></div>
<div class="separator" style="clear: both; text-align: left;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; margin: 0px; outline: none; padding: 0px;">We have recently started stocking in the shop a Three Channel WiFi Relay / Thermostat Board designed by our friend <a href="https://harizanov.com/">Martin&nbsp;Harizanov</a>.</span></div>
<div class="separator" style="clear: both; text-align: left;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; margin: 0px; outline: none; padding: 0px;"><br /></span></div>
<div class="separator" style="clear: both; text-align: left;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; margin: 0px; outline: none; padding: 0px;">The board has been well designed to physically separate high voltage AC mains from the low voltage logic. The board has an optional power supply to enable the board to be powered directly from 100-240V AC. A wall-mountable plastic enclosure is included.&nbsp;</span></div>
<div class="separator" style="clear: both; text-align: left;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; margin: 0px; outline: none; padding: 0px;"><br /></span></div>
<div class="separator" style="clear: both; text-align: left;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif;"><span style="font-size: 12.8px; line-height: 16.64px;">The board can be used to control a heating / AC /&nbsp;humidifier via local control loop from on-board sensor. The unit can be programmed with a schedule and or manually&nbsp;controlled&nbsp;via web UI via WIFI. Sensor&nbsp;data and relay status can be posted to <a href="http://emoncms.org/">Emoncms</a> for logging and graphing.&nbsp;</span></span></div>
<div class="separator" style="clear: both; text-align: left;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; margin: 0px; outline: none; padding: 0px;"><br /></span></div>
<div class="separator" style="clear: both; text-align: left;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; margin: 0px; outline: none; padding: 0px;"><strong style="background-color: white; color: red; font-size: 12.8px; line-height: 16.64px; margin: 0px; outline: none; padding: 0px;">NOTE: The board connects to and controls high voltage, knowledge and attention&nbsp;is required when installing to prevent electrical shock.</strong></span></div>
<div class="separator" style="clear: both; text-align: left;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; margin: 0px; outline: none; padding: 0px;"><strong style="background-color: white; color: red; font-size: 12.8px; line-height: 16.64px; margin: 0px; outline: none; padding: 0px;"><br /></strong></span></div>
<div class="separator" style="clear: both; text-align: left;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif;"><span style="background-color: white; font-size: 12.8px; line-height: 16.64px;"><b><u>Overview</u></b></span></span></div>
<div class="separator" style="clear: both; text-align: left;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; margin: 0px; outline: none; padding: 0px;"><strong style="background-color: white; color: red; font-size: 12.8px; line-height: 16.64px; margin: 0px; outline: none; padding: 0px;"><br /></strong></span></div>
<div class="separator" style="clear: both; text-align: left;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; margin: 0px; outline: none; padding: 0px;">The relay board is a open software/hardware multi-purpose relay board based on the&nbsp;</span><a href="https://espressif.com/en/products/esp8266/" style="color: #3399cc; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; font-weight: bold; line-height: 1.3; margin: 0px; outline: none; padding: 0px;" target="_blank">ESP8266</a><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; margin: 0px; outline: none; padding: 0px;">&nbsp;WiFi SoC. It can&nbsp;control up to three AC or DC loads over the Internet using web UI or MQTT.</span></div>
<div style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; outline: none; padding: 0px;"><br /></div>
<ul style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 19.2px; margin: 0px 0px 10px 30px; outline: none; padding: 0px;"><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">Powered by the popular&nbsp;<a href="https://espressif.com/en/products/esp8266/" style="color: #3399cc; font-weight: bold; margin: 0px; outline: none; padding: 0px;" target="_blank">ESP8266&nbsp;</a>WiFi SoC</li></ul>
<ul style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 19.2px; margin: 0px 0px 10px 30px; outline: none; padding: 0px;"><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">Powerd direct from 230V AC via isolated on-board PSU (optional extra) or 5V DC via micro USB</li></ul>
<ul style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 19.2px; margin: 0px 0px 10px 30px; outline: none; padding: 0px;"><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">Up to three&nbsp;<a href="http://www.te.com/catalog/pn/en/3-1393239-6" style="color: #3399cc; font-weight: bold; margin: 0px; outline: none; padding: 0px;" target="_blank">high quality 10A relays</a>&nbsp;for switching AC or DC loads (see DC switching notes)</li></ul>
<ul style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 19.2px; margin: 0px 0px 10px 30px; outline: none; padding: 0px;"><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">Built-in web server with mobile device friendly UI and HTTP API to control the relays</li><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">Thermostat function with weekly scheduling</li><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">Manual relay control via the UI</li></ul>
<ul style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 19.2px; margin: 0px 0px 10px 30px; outline: none; padding: 0px;"><li style="margin: 0px 0px 2px; outline: none; padding: 0px;"><a href="http://en.wikipedia.org/wiki/MQTT" style="color: #3399cc; font-weight: bold; margin: 0px; outline: none; padding: 0px;" target="_blank">MQTT&nbsp;</a>support</li></ul>
<ul style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 19.2px; margin: 0px 0px 10px 30px; outline: none; padding: 0px;"><li style="margin: 0px 0px 2px; outline: none; padding: 0px;"><a href="http://en.wikipedia.org/wiki/Network_Time_Protocol" style="color: #3399cc; font-weight: bold; margin: 0px; outline: none; padding: 0px;" target="_blank">NTP</a>&nbsp;for network time and scheduling functionality</li></ul>
<ul style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 19.2px; margin: 0px 0px 10px 30px; outline: none; padding: 0px;"><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">Web server settings, including HTTP&nbsp;port and basic HTTP authentication setup</li></ul>
<ul style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 19.2px; margin: 0px 0px 10px 30px; outline: none; padding: 0px;"><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">Broadcast relay/sensor data using HTTP GET to services like&nbsp;<a href="https://thingspeak.com/" style="color: #3399cc; font-weight: bold; margin: 0px; outline: none; padding: 0px;" target="_blank">ThingSpeak</a>&nbsp;or&nbsp;<a href="http://emoncms.org/" style="color: #3399cc; font-weight: bold; margin: 0px; outline: none; padding: 0px;" target="_blank">Emoncms</a></li><ul style="margin: 0px 0px 10px 30px; outline: none; padding: 0px;"><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">Integration with ThingSpeak for charting/analytics visualization</li></ul></ul>
<ul style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 19.2px; margin: 0px 0px 10px 30px; outline: none; padding: 0px;"><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">Temperature sensor support (one of them, not both at the same time) -&nbsp;(optional extra)</li><ul style="margin: 0px 0px 10px 30px; outline: none; padding: 0px;"><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">DS18B20 one-wire temperature:&nbsp;supports multiple sensors</li><li style="margin: 0px 0px 2px; outline: none; padding: 0px;">DHT22 (AM2302) Humidity &amp; Temperature</li></ul></ul>
<div><h3 style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 1.4em; font-weight: normal; margin: 0px 0px 5px; outline: none; padding: 0px;"></h3><h3 style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 1.4em; font-weight: normal; margin: 0px 0px 5px; outline: none; padding: 0px;">Shop:</h3><div><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 16.64px;">The relay board can now be purchased direct from our shop:&nbsp;</span><span style="font-family: Verdana, Arial, Helvetica, sans-serif;"><span style="font-size: 12.8px; line-height: 16.64px;"><a href="http://shop.openenergymonitor.com/three-channel-wifi-relay-thermostat/">http://shop.openenergymonitor.com/three-channel-wifi-relay-thermostat/</a></span></span></div><h3 style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 1.4em; font-weight: normal; margin: 0px 0px 5px; outline: none; padding: 0px;"></h3><h3 style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 1.4em; font-weight: normal; margin: 0px 0px 5px; outline: none; padding: 0px;">Documentation &amp; Set-up:&nbsp;</h3></div>
<div><span style="font-family: Verdana, Arial, Helvetica, sans-serif;"><span style="font-size: 12.8px; line-height: 19.2px;">Full technical details and set-up guide are available on Martin's Wiki:&nbsp;<a href="https://harizanov.com/wiki/wiki-home/three-channel-wifi-relaythermostat-board/">https://harizanov.com/wiki/wiki-home/three-channel-wifi-relaythermostat-board/</a></span></span></div>
<div><span style="font-family: Verdana, Arial, Helvetica, sans-serif;"><span style="font-size: 12.8px; line-height: 19.2px;"><br /></span></span></div>
<div><h3 style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 1.4em; font-weight: normal; margin: 0px 0px 5px; outline: none; padding: 0px;">Related Blog Posts:</h3><div style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; outline: none; padding: 0px;"><a href="https://harizanov.com/2015/03/diy-internet-connected-smart-humidifier/" style="color: #3399cc; font-weight: bold; margin: 0px; outline: none; padding: 0px;">DIY Internet Connected Smart Humidifier</a></div><div style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; outline: none; padding: 0px;"><a href="https://harizanov.com/2015/02/wifi-thermostat-with-weekly-scheduler/" style="color: #3399cc; font-weight: bold; margin: 0px; outline: none; padding: 0px;">WIFI Thermostat with weekly scheduler</a></div><div style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; outline: none; padding: 0px;"><a href="https://harizanov.com/2014/12/wifi-iot-3-channel-relay-board-with-mqtt-and-http-api-using-esp8266/" style="color: #3399cc; font-weight: bold; margin: 0px; outline: none; padding: 0px;">WiFi IoT 3 channel relay board with MQTT and HTTP API using ESP8266</a></div><div style="background-color: white; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.8px; line-height: 1.3; outline: none; padding: 0px;"><a href="https://harizanov.com/2015/06/firmware-over-the-air-fota-for-esp8266-soc/" style="color: #3399cc; font-weight: bold; margin: 0px; outline: none; padding: 0px;">ESP8266 OTA Update</a>&nbsp;</div></div>
<div class="separator" style="clear: both; text-align: center;"><br /></div>
<div class="separator" style="clear: both; text-align: left;">Overview demo of the board in action by Paul Reed:&nbsp;</div>
<div class="separator" style="clear: both; text-align: center;"><br /><iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/nDaiUxO4Lt8/0.jpg" src="https://www.youtube.com/embed/nDaiUxO4Lt8?feature=player_embedded" frameborder="0" allowfullscreen=""></iframe></div>
<div class="separator" style="clear: both; text-align: center;"><br /></div>
<div class="separator" style="clear: both; text-align: center;"><br /></div>
<div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-AXCP04Y4q_Q/Vdhb8REc4lI/AAAAAAABcVc/IsQrc2I1ctE/s1600/WIFI_relay.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="478" src="http://4.bp.blogspot.com/-AXCP04Y4q_Q/Vdhb8REc4lI/AAAAAAABcVc/IsQrc2I1ctE/s640/WIFI_relay.jpg" width="640" /></a></div>
<p><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://1.bp.blogspot.com/-h7XcnL4hayU/Vdhb8QAGl6I/AAAAAAABcVY/n7eM8fuIaiQ/s1600/WIFI_relay_case.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="467" src="http://1.bp.blogspot.com/-h7XcnL4hayU/Vdhb8QAGl6I/AAAAAAABcVY/n7eM8fuIaiQ/s640/WIFI_relay_case.jpg" width="640" /></a>&lt;/div&gt;<br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-E6G7l8gqJmQ/VdhcAUnnYLI/AAAAAAABcV0/5ZqMX6jjwk0/s1600/control_relay_html__44590.1438788811.1280.1280.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="392" src="http://4.bp.blogspot.com/-E6G7l8gqJmQ/VdhcAUnnYLI/AAAAAAABcV0/5ZqMX6jjwk0/s400/control_relay_html__44590.1438788811.1280.1280.png" width="400" /></a>&lt;/div&gt;<br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-ybbRIxjCfB4/VdhcAven0ZI/AAAAAAABcV4/4vt8Yh5uqrw/s1600/control_thermostat_html2__38976.1438788811.1280.1280.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="640" src="http://4.bp.blogspot.com/-ybbRIxjCfB4/VdhcAven0ZI/AAAAAAABcV4/4vt8Yh5uqrw/s640/control_thermostat_html2__38976.1438788811.1280.1280.png" width="387" /></a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://3.bp.blogspot.com/-TZkjMmosL60/Vdhs1u7JTLI/AAAAAAABcWk/ZyJfxkDadyw/s1600/index_tpl__78496.1438788812.1280.1280.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="400" src="http://3.bp.blogspot.com/-TZkjMmosL60/Vdhs1u7JTLI/AAAAAAABcWk/ZyJfxkDadyw/s400/index_tpl__78496.1438788812.1280.1280.png" width="395" /></a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://3.bp.blogspot.com/-rEUBDK0yMok/Vdhb_7OuXcI/AAAAAAABcWA/DoFnIeb9_tk/s1600/config_mqtt_tpl__60101.1438788811.1280.1280.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="400" src="http://3.bp.blogspot.com/-rEUBDK0yMok/Vdhb_7OuXcI/AAAAAAABcWA/DoFnIeb9_tk/s400/config_mqtt_tpl__60101.1438788811.1280.1280.png" width="325" /></a>&lt;/div&gt;<br />&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://3.bp.blogspot.com/-t4AHCjHPYu0/Vdhb_177o8I/AAAAAAABcWM/OHUS0dqh_g8/s1600/config_wifi_wifi_tpl__56418.1438788813.1280.1280.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="640" src="http://3.bp.blogspot.com/-t4AHCjHPYu0/Vdhb_177o8I/AAAAAAABcWM/OHUS0dqh_g8/s640/config_wifi_wifi_tpl__56418.1438788813.1280.1280.png" width="320" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;<br />&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://2.bp.blogspot.com/-Z-6CsvcGQGs/Vdwf2FNVuLI/AAAAAAABc7M/npUBFYU1euo/s1600/wifi_realy_post_emoncms.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="140" src="http://2.bp.blogspot.com/-Z-6CsvcGQGs/Vdwf2FNVuLI/AAAAAAABc7M/npUBFYU1euo/s640/wifi_realy_post_emoncms.png" width="640" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Posting status &amp; sensor readings to Emoncms&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://2.bp.blogspot.com/-VmWNhox2qmo/Vdhs9WwjSRI/AAAAAAABcWs/jZITz2d54Os/s1600/esp8266_relay_board_brd__51754.1438788657.1280.1280.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="400" src="http://2.bp.blogspot.com/-VmWNhox2qmo/Vdhs9WwjSRI/AAAAAAABcWs/jZITz2d54Os/s400/esp8266_relay_board_brd__51754.1438788657.1280.1280.png" width="385" /></a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;<br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;<br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pebble Smart Watch Emoncms Heating Control Demo]]></title>
    <link href="https://blog.openenergymonitor.org/2014/08/pebble-smart-watch-emoncms-heating/"/>
    <updated>2014-08-01T15:50:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2014/08/pebble-smart-watch-emoncms-heating</id>
    <content type="html"><![CDATA[<p>This post follows on my post a while back on <a href="http://openenergymonitor.blogspot.co.uk/2013/12/emoncms-early-heating-control-demo.html">Emoncms heating control</a>, and links in with my previous post on using Tasker to display Emoncms notifications. For details of the hardware and overview of the heating control setup, see the Emoncms heating control post linked above.<br /><br />The Pebble is a Bluetooth connected smart watch which works with Apple and android smartphones. Using an e-ink display the Pebble watches achieves a week of battery life. Very impressive from a hardware point of view. I’ve been using a Pebble with my android phone for the past couple of weeks and found the Pebble to be useful for keeping up with <a href="http://openenergymonitor.blogspot.com/2014/08/android-tasker-pebble-smartwatch.html">notifications</a> while out out and about and especially for <a href="https://play.google.com/store/apps/details?id=ca.rebootsramblings.musicboss&amp;hl=en_GB">controlling music</a>, <a href="https://play.google.com/store/apps/details?id=com.batescorp.pebble.nav&amp;hl=en_GB">navigation directions</a> and <a href="https://play.google.com/store/apps/details?id=com.strava&amp;hl=en_GB">activity tracking</a> while out biking, running, driving and even swimming!<br /><br />The thought occurred to me that the Pebble could potentially be a super convenient way to quickly control my heating. I’ve got working a simple demo to turn my heating on and off, the could easily be extended to allow setting a set point.<br /><br />When the Pebble was first released my friend Ryan Brooks put together a <a href="http://openenergymonitor.blogspot.com/2014/02/pebble-smart-watch-emoncms-display.html">demo to display feed data from Emoncms on the pebble</a>. The code for this demo is up on GitHub, however since then things have moved on, Pebble have released SDK 2.0 and launched the pebble app store allowing many applications to be easily loaded onto the Pebble. One of the more powerful applications is <a href="https://play.google.com/store/apps/details?id=com.kodek.pebbletasker&amp;hl=en_GB">Pebble Tasker</a>, when linked with the <a href="https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm">main Tasker App</a> on an android phone the possibles are endless. See my previous <a href="http://openenergymonitor.blogspot.com/2014/08/android-tasker-pebble-smartwatch.html">blog post on using Tasker to display Emoncms notification on an android phone</a>. Taking inspiration from <a href="http://nathan.chantrell.net/home-automation/">Nathan Chantrell’s home automation setup</a> using Pebble and Tasker I decided to have a go at directly controlling my heating from my Pebble, here is the result:<br /><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://1.bp.blogspot.com/-_SSMd3zwwb4/U9p1Vm5zYDI/AAAAAAAA4ns/QS82TULGXx8/s1600/P1050327.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-_SSMd3zwwb4/U9p1Vm5zYDI/AAAAAAAA4ns/QS82TULGXx8/s1600/P1050327.JPG" height="240" width="320" /></a>&lt;/div&gt;<br /><br />&lt;iframe allowfullscreen="" frameborder="0" height="315" src="//www.youtube.com/embed/yRyeDhEQVkg" width="560"&gt;&lt;/iframe&gt; <br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;<br /><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-sJ0ArawyZgQ/U9p1WUgL-7I/AAAAAAAA4nw/SUXXwndvDN4/s1600/P1050328.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-sJ0ArawyZgQ/U9p1WUgL-7I/AAAAAAAA4nw/SUXXwndvDN4/s1600/P1050328.JPG" height="240" width="320" /></a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Here are the steps to replicate this system:&lt;/div&gt;&lt;h3 style="clear: both; text-align: left;"&gt;1. Install Emoncms on a Raspberry Pi and enable RF12 Packetgen Module &lt;/h3&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;I used the new pre-built SD card image for the low write version of emoncms, downloadable from the link below. This is soon to become our default Raspberry Pi pre-built image once testing is complete&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<a href="https://github.com/emoncms/emoncms/tree/bufferedwrite">https://github.com/emoncms/emoncms/tree/bufferedwrite</a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Following the setup guide enable local logging and configure emonHub&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<a href="https://github.com/emoncms/emoncms/blob/bufferedwrite/docs/setup.md">https://github.com/emoncms/emoncms/blob/bufferedwrite/docs/setup.md</a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;The heating control setup requires the emoncms Packetgen module. Follow the steps to enable packetgen to work with emonHub. &lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<a href="https://github.com/emoncms/emoncms/blob/bufferedwrite/docs/emonhubmod.md">https://github.com/emoncms/emoncms/blob/bufferedwrite/docs/emonhubmod.md</a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;More info on packetgen module can be found: <a href="https://github.com/emoncms/packetgen">https://github.com/emoncms/packetgen</a>&lt;/div&gt;&lt;h3 style="clear: both; text-align: left;"&gt;2. Setup RFM12B receiver and control relay &lt;/h3&gt;&lt;div&gt;To perform the actual control of the boiler you will need to setup an RFM12B receiver node with a relay or similar. The actual hardware setup will depend on what you want to control, a JeeLink or partially populated emonTx V2 work well as a good base for the control hardware. See my <a href="http://openenergymonitor.blogspot.com/2013/12/emoncms-early-heating-control-demo.html">previous post on heating control</a> for more info regarding the hardware. The packetgen module will provide an example Arduino sketch to upload. &lt;/div&gt;&lt;div&gt;<br />&lt;/div&gt;&lt;h3&gt;3. Install and Configure Tasker on your android Phone &lt;/h3&gt;&lt;div&gt;<a href="https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm">https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm</a><br /><br />&lt;div&gt;The emoncms API to set a packetgen variable is as follows:<br /><br /><i>http://YOUR_EMONCMS_SERVER_IP_OR_HOSTNAME/emoncms/packetgen/update.json?id=4&amp;value=1&amp;apikey=”YOUR_RW_APIKEY”</i>&lt;/div&gt;&lt;div&gt;<br />ID is the id of the packetgen variable (they start at 0) and value is the value to be set, the example above will turn the heating on setting variable 4 which in my setup is a boolean control variable to ‘1’. You can test if this is working by calling the API in your browser.<br /><br />&lt;/div&gt;I’ve created a Tasker template task which calls the above API which can be downloaded from Github and imported into Tasker, follow instructions on Github Readme. Variables should be self-explanatory.<br /><br /><a href="https://github.com/emoncms/androidTasker">https://github.com/emoncms/androidTasker</a><br /><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-cUl9ckQsfuY/U9uzvgik16I/AAAAAAAA4s0/L8JNp-rUeE8/s1600/2014-08-01+15.32.06.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-cUl9ckQsfuY/U9uzvgik16I/AAAAAAAA4s0/L8JNp-rUeE8/s1600/2014-08-01+15.32.06.png" height="640" width="400" /></a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;If a successful response is received from the Emoncms server a ‘success’ notification is displayed, else a fail notification is activated. &lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-PqdqiEaQ0IU/U9u0XAshGiI/AAAAAAAA4tA/U4Z2b-S7LmU/s1600/2014-08-01+15.32.51.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-PqdqiEaQ0IU/U9u0XAshGiI/AAAAAAAA4tA/U4Z2b-S7LmU/s1600/2014-08-01+15.32.51.png" height="400" width="225" /></a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;<br />Home screen Tasker task shortcut widgets can be created on your android home screen to allow Tasker tasks to be easily activated, or profiles can be setup to turn the heating on as you arrive home / leave work or certain times per day. The possibles are endless! Just make sure your system has some hardware fail-safe so you don’t get home to a house like a sauna or worse!<br /><br />&lt;/div&gt;&lt;div&gt;<br />If you are setting up Tasker yourself from scratch setup GET requst as follows:&lt;/div&gt;&lt;div&gt;<br /><i>New Task &gt; + new action &gt; net &gt; HTTP GET &gt; enter HTTP API above into host and (optionally) write output to log file </i>&lt;/div&gt;&lt;h3&gt;<br />4. Install &amp; configure Pebble Tasker on the Pebble Watch&lt;/h3&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<a href="https://play.google.com/store/apps/details?id=com.kodek.pebbletasker&amp;hl=en_GB">https://play.google.com/store/apps/details?id=com.kodek.pebbletasker&amp;hl=en_GB</a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;To map Tasker tasks to allow easy control from a Pebble &lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://1.bp.blogspot.com/-d7UrLZR3-qU/U9umjLXlyEI/AAAAAAAA4sY/aLp4ph6XcXw/s1600/2014-07-31+17.10.26.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-d7UrLZR3-qU/U9umjLXlyEI/AAAAAAAA4sY/aLp4ph6XcXw/s1600/2014-07-31+17.10.26.png" height="400" width="225" /></a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;h3 style="clear: both; text-align: left;"&gt;Other Pebble Tweaks I’ve found useful&lt;/h3&gt;&lt;div style="clear: both; text-align: left;"&gt;While not directly relevant to heating control here are some further details of my Pebble smartwatch setup: &lt;/div&gt;&lt;div style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;div style="clear: both; text-align: left;"&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;Using <a href="http://pebblebits.com/">PebbleBits firmware</a> on the pebble to quickly launch pebble apps from the watch face&lt;/li&gt;&lt;li&gt;Using <a href="https://github.com/emoncms/androidTasker/blob/master/Strava_Start___Stop.tsk.xml">Tasker to Stop / Start Strava </a>&lt;/li&gt;&lt;li&gt;<a href="http://www.mypebblefaces.com/apps/1486/1299/">Modern Watchface</a> is my favourite watch face (shown in demo above)&lt;/li&gt;&lt;li&gt;<a href="https://play.google.com/store/apps/details?id=ca.rebootsramblings.musicboss&amp;hl=en_GB">Music Boss </a>is great for controlling music and starting podcasts while driving or biking&lt;/li&gt;&lt;li&gt;<a href="https://play.google.com/store/apps/details?id=com.batescorp.pebble.nav&amp;hl=en_GB">NavMe</a> is great for directions on the Pebble while on the bike  &lt;/li&gt;&lt;li&gt;Tasker can be used to send commonly sent SMS’s and call favourite contacts direct from the Pebble &lt;/li&gt;&lt;/ul&gt;<br />&lt;div style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;div style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;<br /><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emoncms control developments and demo's]]></title>
    <link href="https://blog.openenergymonitor.org/2013/12/emoncms-control-developments-and-demos/"/>
    <updated>2013-12-26T16:23:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2013/12/emoncms-control-developments-and-demos</id>
    <content type="html"><![CDATA[<div id="example1heatingonoff">First Happy Christmas everyone for yesterday!<br /><br />One of the things I enjoy about the Christmas period is that you get some nice time to relax and with relaxation comes ideas and energy to try out some new things.<br /><br />Glyn and I had been talking about control interfaces that could work well on a mobile or tablet and Id been working on a touch enabled dial earlier this month so I thought Id package it up as a emoncms module that sets the control variables in the packetgen module, I've also created a couple of simpler control interface examples using buttons and edit boxes. To try out the following demo's for yourself see the steps at the bottom of the post.</div>
<h2 id="example1heatingonoff">Example 1: Heating On/Off</h2>
<p>A simple example using a bootstrap styled html button as our heating on/off button. Clicking the button toggles the state and updates the “packetgen” control packet with the new state.<br /><br /><img alt="button off" height="144" src="https://github.com/emoncms/development/raw/master/Modules/control/readme_images/button.png" title="" width="640" /><br /><br /><img alt="button on" height="145" src="https://github.com/emoncms/development/raw/master/Modules/control/readme_images/button_on.png" title="" width="640" /><br />&lt;h2 id="example2heatingonoffplussetpoint"&gt;Example 2: Heating On/Off plus set point&lt;/h2&gt;Very similar to the first example but now with a text input for setting the set point temperature for the room/building. The microcontroller on the control node checks the room temperature and turns on and off the heater depending on the setpoint setting it recieves from emoncms.<br /><br /><img alt="setpoint" height="178" src="https://github.com/emoncms/development/raw/master/Modules/control/readme_images/setpoint.png" title="" width="640" /><br />&lt;h2 id="example3nestinspireddial"&gt;Example 3: Nest inspired dial&lt;/h2&gt;A nest inspired dial interface for setting the setpoint temperature. The set point can be adjusted by spinning the dial wheel with your finger:<br /><br /><img alt="heating dial" height="391" src="https://github.com/emoncms/development/raw/master/Modules/control/readme_images/heatingdial_expanded.png" title="" width="640" /><br /><br />The dial and page resizes to fit different screen types from widescreen laptop’s to mobile phones and tablets and touch can be used to spin the dial.<br /><br /><img alt="heating dial mobile" src="https://github.com/emoncms/development/raw/master/Modules/control/readme_images/heatingdial.png" title="" /><br />&lt;h2 id="solarpvgeneration"&gt;Solar PV Generation&lt;/h2&gt;Not really control but developing the idea of custom html/javascript canvas based graphics further.<br /><br />I’ve always liked the standard “news &amp; weather” app that came with my android phone. It’s a good example of how clean an intuitive graphs can be and how touch can be used to browse temperature/humidity at different times of the day.<br />This example is a start on creating a graph that looks and behaves in much the same way implemented in canvas.<br /><br /><img alt="solarpv" height="263" src="https://github.com/emoncms/development/raw/master/Modules/control/readme_images/solarpv.png" title="" width="640" /><br />&lt;h2 id="whatyouwillneedtoruntheseexamples"&gt;What you will need to run these examples&lt;/h2&gt;You will need your own installation of emoncms to try these out, such as an emoncms + raspberrypi + harddrive setup.<br /><br /><a href="http://emoncms.org/site/docs/raspberrypihdd">RaspberryPI with harddrive</a><br /><br />You will also need the packetgen module (installed as default with the harddrive image):<br /><br />http://github.com/emoncms/packetgen<br /><br />and the ‘development’ repository <br /><br />http://github.com/emoncms/development<br /><br />Copy the folder titled myheating from the development repository to your emoncms/Modules folder. (from development/Modules/control)<br /><br />You should now be able to load the examples by clicking on the My Heating menu item.<br /><br />The example does not yet allow for any gui based configuration and so assumes that the control packet structure looks like this:<br /><br /><img alt="packet structure" height="288" src="https://github.com/emoncms/development/raw/master/Modules/control/readme_images/packetgen.png" title="" width="640" /><br /><br />This packet will work with the Arduino electricradiator control node example that can be found here:<br /><br /><a href="https://github.com/emoncms/development/tree/master/Modules/control/Arduino%20Examples/electricradiator">Arduino Examples / electricradiator</a><br /><br />This sketch could be run on an emontx with jeeplug relay’s attached or other rfm12b + arduino + relay type hardware builds.<br /><br /><b>Coding your own control interface</b><br /><br />The code for the simple button example above which may be useful as a foundation for building something else can be found here:<br /><br /><a href="https://github.com/emoncms/development/blob/master/Modules/control/myheating/button.php">https://github.com/emoncms/development/blob/master/Modules/control/myheating/button.php</a><br /><br />The interface is all in html and javascript jquery and uses bootstrap style buttons it just sends the updated heating state to the packetgen module via ajax.<br /><br /><b>More posts on controlling things </b><br /><br />Glyn’s post on controlling his boiler: <a href="http://openenergymonitor.blogspot.co.uk/2013/12/emoncms-early-heating-control-demo.html">http://openenergymonitor.blogspot.co.uk/2013/12/emoncms-early-heating-control-demo.html</a><br /><br />The packet generator: <a href="http://openenergymonitor.blogspot.co.uk/2013/11/adding-control-to-emoncms-rfm12b-packet.html">http://openenergymonitor.blogspot.co.uk/2013/11/adding-control-to-emoncms-rfm12b-packet.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emoncms (early) Heating Control Demo]]></title>
    <link href="https://blog.openenergymonitor.org/2013/12/emoncms-early-heating-control-demo/"/>
    <updated>2013-12-15T21:20:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2013/12/emoncms-early-heating-control-demo</id>
    <content type="html"><![CDATA[<p>I’ve just hooked up a relay to control my central heating boiler and am successfully controlling it via the new emoncms packet generator module…it feels like the future has arrived in my house :-)<br /><br />The next step will be to make a nice user facing interface which allows setting heating control time schedules and pulling in temperature data from emonTH and even making it smart by using energy data to try and detect if someone is home or not. Lots of exciting possibilities now the enabling hardware is in place.<br /><br />&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-SjVPMnBRjYY/Uq4aU1vsHWI/AAAAAAAArwc/9p8I5DZXh9g/s1600/20131215_204511_Orwig+Terrace.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="300" src="http://4.bp.blogspot.com/-SjVPMnBRjYY/Uq4aU1vsHWI/AAAAAAAArwc/9p8I5DZXh9g/s400/20131215_204511_Orwig+Terrace.jpg" width="400" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Gas Combi Boiler Relay Control Unit top left&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Please excuse the old boiler, yes I know it should be a no brainer to replace it with a modern efficient condensing unit however things are never simple in rented accommodation. In practice I hardly use the boiler since bottled LPG is very expensive (no mains gas available here), luckily I have a wood stove and a good supply of wood!<br /><br />Here’s a demo of the heating boiler being turned on remotely:<br /><br />&lt;iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/1d797idBJ2M" width="640"&gt;&lt;/iframe&gt; <br />&lt;h3&gt;Hardware:&lt;/h3&gt;<b>Webserver: </b><br /><a href="http://shop.openenergymonitor.com/raspberry-pi/">Raspberry Pi with RFM12Pi expansion module</a> running emoncms (on external HDD file system): <a href="http://openenergymonitor.blogspot.com/2013/12/setup-emoncms-on-raspberrypi-with-hard.html">see blog post</a>. The Raspberry Pi and emoncms are also used to log my home power consumption from my <a href="http://openenergymonitor.org/emon/modules/emonTxV3">emonTx V3</a>, and room temperatures and humidity from my <a href="http://openenergymonitor.org/emon/modules/emonTH">emonTH’s.</a> It also mirrors the data to a remote emoncms server for backup.<br /><br />&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://2.bp.blogspot.com/-yE06dnTas_U/Uql-Wl0JuAI/AAAAAAAArqg/aKs3d72Xqh0/s1600/pihdsetup.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="300" src="http://2.bp.blogspot.com/-yE06dnTas_U/Uql-Wl0JuAI/AAAAAAAArqg/aKs3d72Xqh0/s400/pihdsetup.jpg" width="400" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Raspberry Pi with RFM12Pi module with emoncms running locally on HDD file system&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;<br /><br /><b>Control Node:</b><br /><br /><b>If switching mains voltage is involved only undertake tasks you are comfortable with, making sure everything is isolated before starting work and don’t take any chances. </b><br /><b><br /></b>Heating systems vary widely, as does the type of control available. Some heating boilers can be controlled via an RF protocol, this could be preferable since tapping into the boiler direct and switching high voltage would not be required.<br /><br />My old Worcester Bosch 240 with Honeywell controller requires connecting two terminals together to switch the heating on (see image below). I managed to wire in an additional control wire while keeping the original timer unit in place.<br /><br />I used an emonTx V2 with JeeLabs relay module, this is just what I had to hand, any RFM12B node with an appropriate relay module could be used. We’re looking into making a prototype PCB with an RFM12B, relay unit, on-board power supply and in-line energy monitoring (why not?!). The important consideration here is to make sure everything is properly enclosed and wired up to a high standard if you’re controlling mains voltage. DON’T TAKE CHANCES WITH MAINS VOLTAGE.<br /><br />It’s important that the relay module used can handle the current being switched in my case this was only about 500mA @ 240V AC but if you’re controlling an electric heating direct this is an important consideration.<br /><br />&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://1.bp.blogspot.com/-OZ4jgaJAK4E/Uq31bNdh45I/AAAAAAAArvs/9YoSKa3uQK8/s1600/IMG_20131214_185622.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="300" src="http://1.bp.blogspot.com/-OZ4jgaJAK4E/Uq31bNdh45I/AAAAAAAArvs/9YoSKa3uQK8/s400/IMG_20131214_185622.jpg" width="400" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Old Honeywell timer controller unit with front face removed - connect terminal 5 to 3 to turn heating on - black wire goes to relay (caution 240V AC)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;<br />&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-0Gm-mp2wiyU/Uq3zQUVBu-I/AAAAAAAArvg/VkOa8uQvR7c/s1600/20131214_193529.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="300" src="http://4.bp.blogspot.com/-0Gm-mp2wiyU/Uq3zQUVBu-I/AAAAAAAArvg/VkOa8uQvR7c/s400/20131214_193529.jpg" width="400" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;emonTx V2 with RFM12B and JeeLabs relay module&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;<span id="goog_440867743"></span><br /><br />&lt;h3&gt;Software:&lt;/h3&gt;<b>Emoncms Raspberry Pi Server</b><br />emoncms running on Raspberry Pi with the new packet generator module,<a href="http://openenergymonitor.blogspot.co.uk/2013/11/adding-control-to-emoncms-rfm12b-packet.html"> see blog post</a>. This is included in the emoncms Raspberry Pi external HDD image (it’s still in beta). For the moment as shown in the video the relay is switched on and off from the emoncms backend web page by browsing to the Pi’s local IP address and logging into emoncms and selecting the packet gen module under the extras menu.<br /><br />&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://1.bp.blogspot.com/-_Ym-R5e4vro/Uq4ba4lTDQI/AAAAAAAArwk/jc3HuW2oXLw/s1600/Selection_036.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="257" src="http://1.bp.blogspot.com/-_Ym-R5e4vro/Uq4ba4lTDQI/AAAAAAAArwk/jc3HuW2oXLw/s640/Selection_036.png" width="640" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;emoncms RFM12B control packet generator module - beta&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;<br />To enable control from outside the house the the http port would have to be opened on my router’s firewall and a dynamic dns setup on the external IP address. As mentioned at the beginning of this post the next stage is to design a user facing interface dashboard for emoncms control modules.<br /><br /><b>Arduino Firmware: </b><br />I’ve pushed the Arduino sketch running on the emonTx to the e<a href="https://github.com/emoncms/packetgen/tree/master/Arduino_RFM12B_receiver_sketch_examples">moncms packetgen module GitHub as an example</a>.<br /><br /><b>Fail safe</b><br />I choose a non latching relay so in case of control unit power failure the relay will default to the open / off position.<br /><br />I’ve tried to make the code on the relay control unit as fail safe as possible (independent of Raspberry Pi and network) and as boiler friendly as possible by including a fail safe time after which the relay will default to off (1hr - I’m a frugal user of heating), and a maximum switching rate of 5 min to stop the boiler repeatedly being switched on and off should something go wrong. A hardware watchdog on the ATmega328 was included to try and ensure the microprocessor never locks up.<br /><br /><br /></p>
]]></content>
  </entry>
  
</feed>
