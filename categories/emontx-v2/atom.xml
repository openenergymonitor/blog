<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: emonTx V2 | Blog | OpenEnergyMonitor]]></title>
  <link href="https://blog.openenergymonitor.org/categories/emontx-v2/atom.xml" rel="self"/>
  <link href="https://blog.openenergymonitor.org/"/>
  <updated>2019-06-11T13:21:46+00:00</updated>
  <id>https://blog.openenergymonitor.org/</id>
  <author>
    <name><![CDATA[Glyn Hudson]]></name>
    <email><![CDATA[support@openenergymonitor.zendesk.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Monitoring SolarPV, Heatpump and house electric, EmonTx v2 system upgrade example]]></title>
    <link href="https://blog.openenergymonitor.org/2014/08/monitoring-solarpv-heatpump-and-house/"/>
    <updated>2014-08-06T17:25:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2014/08/monitoring-solarpv-heatpump-and-house</id>
    <content type="html"><![CDATA[<p>Several years ago we did a community energy monitoring project in our local area, Penrhyndeudraeth, North Wales. It involved installing 20 openenergymonitor energy monitors in 20 households and carrying out energy assessment looking at electricity, heating and transport, there is a little more about it and some of the tools we developed <a href="http://openenergymonitor.blogspot.co.uk/2012/01/community-energy-plan-maker.html">here.</a><br /><br />The houses that where most engaged in the monitoring part of the project still have those energy monitors installed and yesterday I went to upgrade one of these systems, I thought Id write a blog post on what I did (written half as a guide) as it might be useful for those using older hardware such as the emonTx V2 and its also quite an interesting example of what you can do with the monitoring system.<br /><br />The upgrade essentially involved replacing a first generation nanode basestation with a RaspberryPI basestation running the latest image and also upgrading the emontx v2 that was in place with new firmware that both does the higher accuracy continuous sampling (developed by Robin Emley) and the watt hour calculation on board.<br /><br />This particular system is measuring Solar PV generation, household electric consumption and the electrical consumption of a heatpump. It has an EmonGLCD Display running the SolarPV firmware, with the red/green glowing ambient light depending on whether more power is being used than generated or vice versa and the data is also posted to emoncms.org for graphing.<br /><br />Here’s a system diagram: <br /><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-NSjTs-IBrD8/U-IYZE55v0I/AAAAAAAAFXI/miI26ZPQKDI/s1600/hp_pv_h_systemdiagram.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-NSjTs-IBrD8/U-IYZE55v0I/AAAAAAAAFXI/miI26ZPQKDI/s1600/hp_pv_h_systemdiagram.png" height="370" width="640" /><b></b></a>&lt;/div&gt;<b>EmonTx:</b><br /><br />Upload to the EmonTxV2 the continuous sampling + watt hour firmware:<br /><a href="https://github.com/openenergymonitor/emonTxFirmware/tree/master/emonTxV2/emonTx_continuous_watthours">https://github.com/openenergymonitor/emonTxFirmware/tree/master/emonTxV2/emonTx_continuous_watthours </a><br /><br />The same thing can of course be achieved with an EmonTxV3 but with the added benefit of a fourth channel and only needing the one ACAC Power adapter. If you have the EmonTxV3 upload the continuous sampling + watt hour firmware found here:<a href="https://github.com/openenergymonitor/emonTxFirmware/tree/master/emonTxV3/RFM12B/Examples/emonTxV3_continuous_kwhtotals_noeeprom"> https://github.com/openenergymonitor/emonTxFirmware/tree/master/emonTxV3/RFM12B/Examples/emonTxV3_continuous_kwhtotals_noeeprom </a><br /><br /><b>EmonGLCD</b><br />Open the SolarPV example: https://github.com/openenergymonitor/EmonGLCD/tree/master/SolarPV<br /><br />On <a href="https://github.com/openenergymonitor/EmonGLCD/blob/master/SolarPV/SolarPV.ino#L68">lines 68 and 69</a> change the emontx radio packet defenition from:<br /><br /><span style="font-size: x-small;"><span style="font-family: &quot;Courier New&quot;,Courier,monospace;">    typedef struct { int power1, power2, power3, Vrms; } PayloadTX;<br />    PayloadTX emontx;</span></span><br /><br />to:<br /><br /><span style="font-size: x-small;"><span style="font-family: &quot;Courier New&quot;,Courier,monospace;">    typedef struct { <br />        unsigned long msgNumber; <br />        int heatpump; // heatpump<br />        int power1; // house power<br />        int power2; // solar power<br />        long wh_CT1;<br />        long wh_CT2;<br />        long wh_CT3;<br />    } PayloadTX;<br />    PayloadTX emontx;</span></span><br /><br />I’ve named the second variable here heatpump instead of power1 and then powers 1 to 3 because power1 and power2 are used as house power and solar power lower down in the firmware.<br /><br /><b>RaspberryPI Basestation</b><br />I used the latest (28th of July emonSD image) that has EmonHub (thanks to Jerome and Paul Burnell) and emoncms ready to go but without the local emoncms installation enabled, the PI was just used as an EmonHub gateway forwarder to emoncms.org. I used the nice pimoroni berryblack raspberrypi case so that the installation was tidy.<br /><br /><a href="http://files.openenergymonitor.org/emonSD-13-08-14.img.zip">Download ready-to-go image: emonSD-13-08-14.img.zip [link updated]</a> <br /><br />To configure EmonHub to post to emoncms.org, SSH into the raspberrypi and put the PI in read/write mode with:<br /><br /><span style="font-family: &quot;Courier New&quot;,Courier,monospace;"><span style="font-size: x-small;">    rpi-rw</span></span><br /><br />and then open the emonhub configuration file:<br /><br /><span style="font-size: x-small;"><span style="font-family: &quot;Courier New&quot;,Courier,monospace;">    nano /boot/emonhub.conf</span></span><br /><br />Set the dispatcher url to: http://emoncms.org and the apikey to your emoncms.org account write apikey.<br /><br />In order to decode the emontx continuous + watt hour radio packet add a node decoder to the nodes section in the emonhub config file at the bottom:<br /><br /><span style="font-size: x-small;"><span style="font-family: &quot;Courier New&quot;,Courier,monospace;">    [nodes]<br />    [[10]]<br />        Datacodes = L,h,h,h,l,l,l</span></span><br /><br /><br />Secure the pi user by changing the password (the default password is raspberry)<br /><span style="font-family: &quot;Courier New&quot;,Courier,monospace;"><span style="font-size: x-small;"><br /></span></span><span style="font-family: &quot;Courier New&quot;,Courier,monospace;"><span style="font-size: x-small;">    passwd</span></span><br /><br />Place the PI back in read only mode:<br /><br /><span style="font-family: &quot;Courier New&quot;,Courier,monospace;"><span style="font-size: x-small;">    rpi-ro</span></span><br /><br /><b>Emoncms configuration</b><br /><br />With the emontx running and the raspberrypi configured as above the inputs will now appear in emoncms.org, but they will be un-named. For this particular installation I named them as in the picture below to correspond to the radio packet format and what I knew I was monitoring on each CT channel.<br /><br />I then logged each of the power inputs to a fixed interval with averaging (PHPFiwa) feed and used the Wh Accumulator input processor to record the Watt hour totals. The Wh Accumulator checks if the watt hour total has reset and if it does it continues the accumulation from the last point. I used the fixed interval without averaging feed engine for the watt hour feeds.<br /><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://3.bp.blogspot.com/-MAZGbUyY-Q4/U-IhT7TGOdI/AAAAAAAAFXY/Oe5O3m7RZWc/s1600/inputconfig.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-MAZGbUyY-Q4/U-IhT7TGOdI/AAAAAAAAFXY/Oe5O3m7RZWc/s1600/inputconfig.png" height="524" width="640" /></a>&lt;/div&gt;<br />To make use of the higher accuracy calculating of watt hours on the emontx and the recording of watt hour feeds<b>, </b>there is a slightly different procedure for creating dashboard kwh per day graphs: <br /><br /><b>Creating a daily electricity consumption graph in a dashboard using watt hour feeds (instead of the old power_to_kwhd method). </b>  <b><br /></b><br /><br />Create a new dashboard and select visualisations &gt; bargraph.<br /><br />Click on the bargraph and click configure to bring up the configuration dialog. Select the watt hour feed that you want to display daily totals from, enter interval, units, dp, scale and delta=1 as below: (Note that you could change the interval here to any interval: hourly, half day, week etc)<br /><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://1.bp.blogspot.com/-Tn1o4o0gNUA/U-IwqaYrUlI/AAAAAAAAFXo/eTAOIhczZqU/s1600/bargraphconfig.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-Tn1o4o0gNUA/U-IwqaYrUlI/AAAAAAAAFXo/eTAOIhczZqU/s1600/bargraphconfig.png" height="338" width="640" /> </a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Click save and continue to add any other text and widgets as required. A simple dashboard showing daily consumption and the current power could look like the screenshot below and could be repeated adding a graph for each channel, heatpump, solarpv and house consumption.&lt;/div&gt;<br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-adMy8oRQCqs/U-IwqgFm4VI/AAAAAAAAFXs/pH0NkxKeIgc/s1600/simpledashboard.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-adMy8oRQCqs/U-IwqgFm4VI/AAAAAAAAFXs/pH0NkxKeIgc/s1600/simpledashboard.png" height="300" width="640" /></a>&lt;/div&gt;</p>
]]></content>
  </entry>
  
</feed>
