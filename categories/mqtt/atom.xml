<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: MQTT | Blog | OpenEnergyMonitor]]></title>
  <link href="https://blog.openenergymonitor.org/categories/mqtt/atom.xml" rel="self"/>
  <link href="https://blog.openenergymonitor.org/"/>
  <updated>2022-04-12T16:21:24+00:00</updated>
  <id>https://blog.openenergymonitor.org/</id>
  <author>
    <name><![CDATA[Glyn Hudson]]></name>
    <email><![CDATA[support@openenergymonitor.zendesk.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[emonPi as a Home Automation Hub]]></title>
    <link href="https://blog.openenergymonitor.org/2017/05/emonpi-mqtt-googlehome/"/>
    <updated>2017-05-05T00:00:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2017/05/emonpi-mqtt-googlehome</id>
    <content type="html"><![CDATA[<p>I believe automation can play an useful role in helping to reduce energy consumption. For example being able to control my home central heating system remotely enables me to only turn on the heating when it’s required and not have it running on a set schedule when the house is empty.</p>

<p>As <a href="2016/08/ecohomelab-control/"> previously mentioned in a blog post</a>, the emonPi (<a href="github.com/openenergymonitor/emonpi/wiki/emonSD-pre-built-SD-card-Download-&amp;-Change-Log">running emonSD pre-built SD card</a>) can function as a powerful home automation hub. Utilising the emonPi as a home automation hub is a good fit for a number of reasons:</p>

<ul>
  <li>It’s already running 24/7 for energy monitoring</li>
  <li>It’s optimised for robust long term operation: the root Raspberry Pi file-system is read-only to increase SD card lifespan</li>
  <li>It’s already connected to your local network</li>
  <li>It’s running Debian Raspbian Jessie therefore installing extra packages is easy and lots of support is available</li>
  <li>Raspberry Pi 3 has plenty of space capacity</li>
  <li>Extra radios / accessories can be connected via USB</li>
  <li>It’s already running an MQTT server</li>
  <li>emonSD pre-built SD card comes pre loaded with the following <a href="guide.openenergymonitor.org/integrations">integrations</a> nodeRED, OpenHAB and LightWaveRF</li>
</ul>

<blockquote>
  <p>In this post I want to share with you how I use the emonPi in my own home.</p>
</blockquote>

<p>Here is a video demo using Google Home to control my central heating and devices via MQTT:</p>

<div class="videoWrapper">
<iframe width="280" height="157" src="https://www.youtube.com/embed/r_v4GXVp0OI" frameborder="0" allowfullscreen=""></iframe>
</div>

<p>Read on to learn how this is achieved using an emonPi and open-source software…</p>

<!--more-->

<p>There are many many options when it comes to home automation and control. Where possible I prefer open-source solutions which do not depend on any third-party services. All the software services for my home system as I describe in this post runs locally on my emonPi and apart from Google Home voice integration does not require an internet connection to function. A self-hosted open-source solution has the added benefit of increased privacy and security which you are in fully in control of.</p>

<h2 id="mqtt">MQTT</h2>

<p>MQTT lightweight communication protocol is used as the ‘glue’ communication layer between all the following services. See <a href="https://guide.openenergymonitor.org/technical/mqtt/">technical/MQTT section of the User Guide</a> for more info about how MQTT works on the emonPi.</p>

<h2 id="energy-monitoring">Energy Monitoring</h2>

<p>Emoncms…obviously!</p>

<p>Recently I have been loving using the V2 Emoncms Android app (currently in beta) which supports multiple pages (see <a href="https://community.openenergymonitor.org/t/emoncms-android-app-v2-0-1-open-beta-testing/3373">forum thread</a>).</p>

<p>Video demo Emoncms Android app V2 beta:</p>

<div class="videoWrapper">
<iframe width="280" height="157" src="https://www.youtube.com/embed/LaTi-l9tVQM" frameborder="0" allowfullscreen=""></iframe>
</div>

<p>I have also recently enjoyed using the redesigned Emoncms Apps module which have just bee released on <a href="https://emoncms.org">Emoncms.org</a>. It’s now possible to have more than one MyElectric or MySolarPV ‘app’ per Emoncms account and Economy 7 split time of use tariffs are now spported (see <a href="https://community.openenergymonitor.org/t/new-version-of-the-emoncms-apps-module/3900/3">forum thread</a>):</p>

<p><img src="/images/myelectric-e7.png" alt="myelectric-e7.png" /></p>

<h2 id="control">Control</h2>

<h3 id="central-heating">Central Heating</h3>

<p>To control my gas central heating boiler I use an <a href="https://guide.openenergymonitor.org/integrations/mqtt-relay/">MQTT WiFi relay</a> which also has a built in thermostat and scheduler, although I don’t use these features, I just control directly via MQTT. The WiFi Relay has been very reliable, it’s been used daily for the past two years in my home and never once required a reboot.</p>

<p><img src="/images/mqtt-relay-overview.png" alt="mqtt-relay-overview.png" /></p>

<h3 id="plug-sockets-lights">Plug sockets (lights)</h3>

<p>I use LightWave RF plugs to which I have lights and other entertainment devices connected e.g. stereo and chromecast. Being able to switch a whole plug bank on/off has the advantage of being able to turn devices fully off when not in use to minimise any <a href="https://en.wikipedia.org/wiki/Standby_power">vampire drain</a>.</p>

<p>The emonPi can control LightWave RF devices directly via MQTT if an RF OOk modules is fitted. See <a href="https://guide.openenergymonitor.org/integrations/lightwaverf">LightWave RF emonPi User Guide</a>.</p>

<p><img src="/images/lightwave-rf-diagram.png" alt="lightwave-rf-diagram.png" /></p>

<p>LightWave RF devices are not perfect, the OOK RF protocol is simplistic, unsecure, occasionally unreliable and state feedback is not available. I am considering swithcing to <a href="https://www.itead.cc/smart-socket.html">ESp8266 based Sonoff plug</a> with third party <a href="https://github.com/arendst/Sonoff-Tasmota">MQTT firmware</a> or <a href="https://github.com/openenergymonitor/emonesp">EmonESP</a> firmware.</p>

<h2 id="interface">Interface</h2>

<p>For the past few years I have been using OpenHAB as the control interface. <a href="https://guide.openenergymonitor.org/integrations/openhab">OpenHAB is pre-loaded onto the emonPi emonSD pre-built image</a>. I am yet to upgrade to OpenHAB V2.0, it looks very nice. However, V1.8 has been very reliable and fits my needs. I use the OpenHAB Android app to access the interface quickly from my phone:</p>

<p><img src="/images/open-hab-home.png" alt="open-hab-home.png" /><img src="/images/open-hab-all.png" alt="open-hab-all.png" /></p>

<p>OpenHAB also <a href="https://apps.getpebble.com/en_US/application/5542604d45bf334314000098?section=watchapps">integrates with my Pebble smartwatch</a> which makes it super easy to turn on/off the heating while out and about:</p>

<p><img src="/images/openhab-pebble.jpg" alt="openhab-pebble" /></p>

<p>A while back (early 2016) I dabbled with <a href="http://home-assistant.io/">HomeAssistant</a>, (<a href="https://blog.openenergymonitor.org/2016/04/Home-Assistant/">see blog post</a>). I was quite impressed, I have been following the project and it looks like it’s matured to be an excellent home automation platform. Quit possibly a rival to OpenHAB.</p>

<p>Another option for an interface is <a href="https://github.com/node-red/node-red-dashboard">NodeRED Dashboard</a> which is now officially part of the NodeRED project.</p>

<p><em>The beauty of MQTT is that it’s platform agnostic, it’s possible to have many different interfaces controlling the same control nodes.</em></p>

<h3 id="voice-interface">Voice interface</h3>

<p>I’ve recently acquired a Google Home voice activated speaker, with a little help from <a href="https://github.com/bwssytems/ha-bridge">ha-bridge</a> to emulate a Philips Hue bridge it’s quite easy to get Google Home to control local devices via MQTT. The same setup will also work with Amazon Echo. See <a href="https://github.com/openenergymonitor/emonpi-ha-bridge">ha-bridge setup guide for emonPi</a></p>

<p>See video demo at the top of this post.</p>

<p>Device config using ha-bridge webpage GUI:</p>

<p><img src="/images/ha-bridge-device-config.png" alt="ha-bridge-device-config.png" /></p>

<p>Google Home app setup:</p>

<p><img src="/images/google-home-app.png" alt="google-home-app.png" /></p>

<h2 id="integration--automation">Integration &amp; Automation</h2>

<p>I use <a href="https://guide.openenergymonitor.org/integrations/nodered">NodeRED which is pre-loaded on emonPi / emonSD</a> to integrate with other services such a getting the latest outdoor temperature from <a href="https://www.wunderground.com/">Weather Underground</a>, send push notifications (heating on / off temperature alert) to my phone using <a href="https://pushover.net/">Pushover</a>. Both these services have pre-made nodeRED flows making integration very easy. NodeRED is pre-installed and configured on emonPi / emonSD. The <a href="https://github.com/openenergymonitor/oem_node-red/blob/master/flows_emonpi.json">example flow included on emonPi</a> demonstrates reading emonTH data from MQTT and external temperature data from Weather Underground.</p>

<p>I also have a nodeRED flow that handles turning off the heating when the temperature in the livingroom (as measured by emonTH) reaches a set point. I could have used the thermostat controller on the WiFi relay to do this, however it would be difficult in my house to run the wired temperature sensor from the Wifi relay to the living room, therefore I use a wireless emonTH temperature instead.</p>

<h1 id="security-and-remote-access">Security and remote access</h1>

<p>Remote control (from outside the local network) can be achieved using a dynamic DNS service such as <a href="https://www.duckdns.org/">DuckDNS</a> or secure VPN to give access to services from the outside. E.g I open port 8080 to give access to OpenHAB running on my emonPi from the internet. OpenHAB has authentication turned on and HTTPS can be used to create a secure connection.</p>

<p>Alternatively, and possibly a better solution could be to use <a href="http://www.myopenhab.org/">MyOpenhab.org</a> service to allow remote control without having to open up a port externally.</p>

<p>Home Assistant has got an example of <a href="https://home-assistant.io/docs/ecosystem/tor/">using Tor Onion Services to access Home Assistant</a> running locally.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EcoHome Lab: From Monitoring to Control]]></title>
    <link href="https://blog.openenergymonitor.org/2016/08/ecohomelab-control/"/>
    <updated>2016-08-12T18:00:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2016/08/ecohomelab-control</id>
    <content type="html"><![CDATA[<p>Last night I attended <a href="https://www.meetup.com/Eco-Home-Lab-Manchester/events/230714252/">EcoHomeLab meetup</a> in Manchester organised by the <a href="http://carbon.coop/">CarbonCoop</a>.</p>

<blockquote>
  <p>EcoHomeLab monthly meetups at <a href="https://madlab.org.uk/">MadLab</a> brings householders and green-technologists together to take control of home energy use and generation.</p>
</blockquote>

<p>It was great fun to catch up with regular faces as well as meet many new interesting people.</p>

<p>I gave a short presentation overview of our efforts as OpenEnergyMonitor to make it as easy as possible for people to get started with energy monitoring and control (home automation) with a sustainability / energy saving focus.</p>

<p>I presented the recent work we have been doing to integrate platforms such as MQTT, Node-RED and openHAB ready-installed and pre-configured on the emonPi, our RaspberryPi based energy monitoring platform. These additional platforms run alongside Emoncms on the emonPi.</p>

<p><strong>See the <a href="http://guide.openenergymonitor.org/integrations/">Integrations section of our user guide for more info</a></strong></p>

<p>Here are copy of my slides from the event:</p>

<iframe src="https://docs.google.com/presentation/d/1qSaxiB2tAgMe3ehQ08E9_r340y9HgHUOYvyUvsHd55I/embed?start=false&amp;loop=false&amp;delayms=10000" frameborder="0" width="529" height="426" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true" style="max-width: 100%;"></iframe>

<ul>
  <li>
    <p><a class="attachment" href="https://community.openenergymonitor.org/uploads/default/original/2X/1/1a55b8c172086f743b1b0abe1d01d7c10963d88c.pdf">Download in PDF format</a> (6.8 MB)</p>
  </li>
  <li><a href="https://docs.google.com/presentation/d/1qSaxiB2tAgMe3ehQ08E9_r340y9HgHUOYvyUvsHd55I/pub?start=false&amp;loop=false&amp;delayms=3000">View in HTML (hosted from Google Slides)</a></li>
  <li><a href="https://docs.google.com/presentation/d/1qSaxiB2tAgMe3ehQ08E9_r340y9HgHUOYvyUvsHd55I/edit?usp=sharing">View in full Google Slides format (with clickable hyperlinks &amp; selectable text)</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Outdoor Temperature Data from Weather Underground to Emoncms & MQTT]]></title>
    <link href="https://blog.openenergymonitor.org/2016/02/outdoor-temperature-data-from-weather/"/>
    <updated>2016-02-29T19:08:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2016/02/outdoor-temperature-data-from-weather</id>
    <content type="html"><![CDATA[<p>Monitoring the temperature outside your house is super useful to inform your home automation systems and calculate domestic heating (and dressing!) requirements.<br /><br />One way is to monitor external temperature is to install your own external <a href="http://shop.openenergymonitor.com/emonth-433mhz-temperature-humidity-node/">emonTH wireless temperature node</a> or use a commercial web-connected weather station. However a cheaper way is to tap into the Internet of Things and connect to another weather station in your area.  <a href="https://www.wunderground.com/weather/api/">Weather Underground</a> have over 18K weather stations online in the USA and a <a href="https://www.wunderground.com/weather/api/">free API</a> for non commercial use.<br /><br />Here’s an example of using nodeRED to poll the Weather Underground API and post to Emoncms (using <a href="http://flows.nodered.org/node/node-red-node-emoncms">nodeRED Emoncms flow</a>) and MQTT.</p>

<!--more-->

<p> See bottom of the post for nodeRED flow export which you can import into your nodeRED by pasting into the import box.<br /><br />NodRED included pre-installed on <a href="https://openenergymonitor.org/emon/node/12212">the latest emonPi image (currently in release-candidate)</a>. The Emoncms flow is pre-installed, you will need to add the <a href="http://flows.nodered.org/node/node-red-node-weather-underground">nodeRED Weather Underground</a> flow by connecting via SSH and running :<br /><br />$ rpi-rw<br />$ cd ~/data/node-red<br />$ sudo npm install node-red-node-weather-underground<br />$ rpi-rw<br />$ exit<br /><br />Once installed you will need to paste in your API key and latitude and longitude (or city) into the Weather Underground node.<br /><br /><br />&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="https://2.bp.blogspot.com/-mZJm0O0-xZM/VtSO8FO7O-I/AAAAAAABpIA/9wzoEv7Pz54/s1600/capture%2Bimage.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="290" src="https://2.bp.blogspot.com/-mZJm0O0-xZM/VtSO8FO7O-I/AAAAAAABpIA/9wzoEv7Pz54/s640/capture%2Bimage.png" width="640" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Example NodeRED flow pulling temperature data from Weather Underground to Emoncms and MQTT&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="https://4.bp.blogspot.com/-Q4L4K6rrVkY/VtSSuTC03sI/AAAAAAABpIQ/hXwY9yTgj-A/s1600/capture%2Bimage2.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="224" src="https://4.bp.blogspot.com/-Q4L4K6rrVkY/VtSSuTC03sI/AAAAAAABpIQ/hXwY9yTgj-A/s640/capture%2Bimage2.png" width="640" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Emoncms Internal &amp; External Temperature Multigraph&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="https://3.bp.blogspot.com/-WQkcdh5STpY/VtSVU6WGhAI/AAAAAAABpIc/eWEaw8v0jj8/s1600/capture%2Bimage3.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="640" src="https://3.bp.blogspot.com/-WQkcdh5STpY/VtSVU6WGhAI/AAAAAAABpIc/eWEaw8v0jj8/s640/capture%2Bimage3.png" width="304" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;My openHAB dashboard displaying outdoor temperature and emonPi data from MQTT&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Example nodeRED flow: &lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<span style="font-size: x-small;"><br /></span>&lt;/div&gt;&lt;div style="clear: both; text-align: left;"&gt;<span style="font-size: x-small;">[{“id”:”14e3d598.a7352a”,”type”:”emoncms-server”,”z”:”4cd40f47.6c38f”,”server”:”http://192.168.0.35/emoncms”,”name”:”emonpi”},{“id”:”286b0130.d794fe”,”type”:”mqtt-broker”,”z”:””,”broker”:”192.168.0.35”,”port”:”1883”,”clientid”:””,”usetls”:false,”verifyservercert”:true,”compatmode”:true,”keepalive”:”15”,”cleansession”:true,”willTopic”:””,”willQos”:”0”,”willRetain”:null,”willPayload”:””,”birthTopic”:””,”birthQos”:”0”,”birthRetain”:null,”birthPayload”:””},{“id”:”8e40f136.25c8c”,”type”:”inject”,”z”:”4cd40f47.6c38f”,”name”:”Poke every 30min”,”topic”:””,”payload”:””,”payloadType”:”str”,”repeat”:”1800”,”crontab”:””,”once”:true,”x”:293.33331298828125,”y”:616.3333740234375,”wires”:[[“801e0088.7a2eb”]]},{“id”:”1d8fc53b.c7453b”,”type”:”mqtt out”,”z”:”4cd40f47.6c38f”,”name”:”MQTT: weather/temp”,”topic”:”weather/temp”,”qos”:””,”retain”:””,”broker”:”286b0130.d794fe”,”x”:840,”y”:479,”wires”:[]},{“id”:”9dfe39d9.afac48”,”type”:”debug”,”z”:”4cd40f47.6c38f”,”name”:””,”active”:true,”console”:”false”,”complete”:”payload”,”x”:772,”y”:395,”wires”:[]},{“id”:”c647a520.c30618”,”type”:”debug”,”z”:”4cd40f47.6c38f”,”name”:”View full output”,”active”:true,”console”:”false”,”complete”:”payload”,”x”:581.3333129882812,”y”:589.3333740234375,”wires”:[]},{“id”:”17551590.ce038a”,”type”:”function”,”z”:”4cd40f47.6c38f”,”name”:”Return temp deg C”,”func”:”context.global.outdoor_temp = msg.payload.tempc;  \nreturn {payload:context.global.outdoor_temp};”,”outputs”:1,”noerr”:0,”x”:533.3333129882812,”y”:454.3333435058594,”wires”:[[“1d8fc53b.c7453b”,”9dfe39d9.afac48”,”50f404a6.f89bac”]]},{“id”:”801e0088.7a2eb”,”type”:”wunderground”,”z”:”4cd40f47.6c38f”,”name”:””,”lon”:”-4.1716485”,”lat”:”53.1429426”,”city”:””,”country”:””,”x”:321,”y”:529,”wires”:[[“17551590.ce038a”,”c647a520.c30618”]]},{“id”:”50f404a6.f89bac”,”type”:”emoncms”,”z”:”4cd40f47.6c38f”,”name”:”Emoncms”,”emonServer”:”14e3d598.a7352a”,”nodegroup”:”weather”,”x”:800,”y”:539,”wires”:[]}]</span>&lt;/div&gt;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[emonPi, NodeRed and MQTT]]></title>
    <link href="https://blog.openenergymonitor.org/2015/10/emonpi-nodered-and-mqtt/"/>
    <updated>2015-10-12T10:52:00+00:00</updated>
    <id>https://blog.openenergymonitor.org/2015/10/emonpi-nodered-and-mqtt</id>
    <content type="html"><![CDATA[<p>Using the <a href="http://openenergymonitor.org/emon/modules/emonpi">emonPi in it’s default configuration</a> works great to post data to Emoncms for logging and visualisation. However there may be times when you want some more flexibility and or ability to interface with other hardware.<br /><br />Using a tool called <a href="http://nodered.org/">Node-Red</a> the emonPi can become a central hub for home automation, control and notification. Node-RED is a tool for wiring together hardware devices, APIs and online services in new and interesting ways. At the heart of Node-RED is a visual editor allowing complex data flows to be wired together with only a little coding skills.  Here are some of my ideas of things I might like to achieve with Node-RED, For more inspiration check out <a href="http://www.youtube.com/watch?v=KPnwyTgZaS0&amp;t=29m18s">Martin’s IoT Google hangout 29min in</a>:<br /><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-dLsVZfkrCk8/Vm2c8jR7OVI/AAAAAAABksA/oPCn7WCPE9U/s1600/node-red.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="200" src="http://4.bp.blogspot.com/-dLsVZfkrCk8/Vm2c8jR7OVI/AAAAAAABksA/oPCn7WCPE9U/s200/node-red.png" width="200" /></a>&lt;/div&gt;<br />&lt;ul&gt;&lt;li&gt;Send power consumption notifications to my phone using <a href="http://flows.nodered.org/node/node-red-node-pushover">Node-RED and Pushover</a>&lt;/li&gt;&lt;li&gt;Send a notification to my phone when it’s a good time to use power e.g <a href="https://gist.github.com/dceejay/6572686">national power demand </a>is low and grid renewable generation input is high&lt;/li&gt;&lt;li&gt;Use an emonTH as a room thermostat temperature input to control my heating using <a href="http://shop.openenergymonitor.com/three-channel-wifi-relay-thermostat/">WiFi MQTT relay board</a> (blog post coming soon… :-) )&lt;/li&gt;&lt;li&gt;Switch my heating on when I arrive home using <a href="https://harizanov.com/2015/03/making-ifttt-if-this-then-that-talk-to-node-red/">node-RED and IFTT</a> android / iOS location &lt;/li&gt;&lt;li&gt;Post energy data to another service e.g. thingspeak.com, pvoutput.org, xively.com etc..&lt;/li&gt;&lt;li&gt;Use <a href="http://flows.nodered.org/node/node-red-node-emoncms">node-RED to post data from other services to Emoncms</a> e.g <a href="https://gist.github.com/dceejay/6572686">national power demand</a>, home weather station, <a href="http://flows.nodered.org/node/node-red-node-openweathermap">weather forecast</a>  &lt;/li&gt;&lt;li&gt;Periodically tweet my home power consumption or solar PV output&lt;/li&gt;&lt;li&gt;Set an email when you emonTH batteries run low (see example below)&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;<b>Install Node-RED on emonPi / emonHub / Raspberry Pi </b>&lt;/h3&gt;Make emonPi file-system RW:<br /><i>$ rpi-rw</i><br /><br />Install Node-RED (taken from <a href="http://nodered.org/docs/hardware/raspberrypi.html">node-RED RaspberryPi install guide</a>):<br /><i>$ curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash - </i><br /><i>$ sudo apt-get install -y build-essential python-dev python-rpi.gpio nodejs</i><br /><i>$ sudo npm install -g –unsafe-perm node-red</i><br /><i><br /></i>Open up port 1880 so we can access Node-RED editor:<br /><i>$ sudo iptables -A INPUT -p tcp -m tcp –dport 1880 -j ACCEPT</i><br /><i><br /></i>Open up port 1883 so we can access MQTT server:<br /><i>$ sudo iptables -A INPUT -p tcp -m tcp –dport 1883 -j ACCEPT</i><br /><i><br /></i>Make iptables rules persistent<br />$ apt-get install iptables-persistent<br /><br />Choose yes to save rules, if needed edit the persistent rules:<br />$ sudo nano /etc/iptables/rules.v4<br /><br /><i><br /></i>Start Node-RED with:<br /><i>$ node-red-pi –max-old-space-size=128</i><br /><br />To view the node-RED graphical editor browse to:<br /><a href="http://emonpi:1880/">http://emonpi:1880/</a> (or use IP address if this does not work)<br /><br />To use Node-RED as a permanent setup you will want to <a href="https://gist.github.com/bigmonkeyboy/9962293">set it up as a service to autostart at boot</a> and e<a href="http://nodered.org/docs/security.html">nable secure authentication access to node-RED editor</a>.<br /><br />When you are done don’t forget to put the emonPi back to read-only mode to preserve SD card lifespan:<br /><i>$ rpi-ro</i><br />&lt;div&gt;<br />&lt;/div&gt;&lt;h3&gt;<b>Getting data from the emonPi into Node-RED</b>&lt;/h3&gt;There are two options to get our energy data into Node-RED:<br /><br /><b>1. Real-time data from emonHub using MQTT (see example below):</b><br /><br /><a href="http://mqtt.org/">MQTT</a> is a lightweight communication protocol for small web-connected devices. The latest version of emonHub as setup on the emonPi (and emonHub from July 15) uses MQTT as a link to Emoncms and also to provide data to the emonPi LCD script. Since MQTT is already running all we need to do is to point Node-RED MQTT input block to subscribe to the <i>‘emonhub/rx/#</i>’ MQTT topic on port 1883. The ‘#’ topic includes data received from all nodes. To subscribe to just one node use e.g. emonPi use: <i>‘emonhub/5/values’ </i>or ‘<i>emonhub/10/values’</i> for emonTx.<br /><br />To subscribe the the emonPi’s MQTT topics externally (if your running node-RED on another machine) you will need to open up the MQTT port on the emonPi:<br /><br /><i>$ sudo iptables -A INPUT -p tcp -m tcp –dport 1883 -j ACCEPT</i><br /><br /><b>2. Historic data from Emoncms using HTTP API: </b><br /><br />To pull historic data already logged to Emoncms (e.g KWh data) into Node-RED we can use Emoncms’s API. Here is a simple example to pull in the latest value from the KWh feed, just enter your RW API key and feed ID:<br /><br /><a href="http://emoncms.org/feed/value.json&amp;apikey=APIKEY&amp;id=FEED_ID">http://emoncms.org/feed/value.json&amp;apikey=APIKEY&amp;id=FEED_ID</a><br /><br />To view all Emoncms API see: <a href="http://emoncms.org/input/api">http://emoncms.org/input/api</a><br /><br />&lt;h3&gt;<b>Node-RED example: send warning email when emonTH battery is low</b>&lt;/h3&gt;<b><br /></b>Simple but useful example, use Node-RED connecting to emonPi in real-time data via MQTT (localhost) and sending email (via Gmail SMTP) if emonTH battery drops below 1.7V. Also in this flow as an example is a node to decode emonPi power data. <br /><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-gfgkoEkv-HY/VhuGvzIzqOI/AAAAAAABg6Q/BUKxbYx6IG0/s1600/Screenshot%2B2015-10-12%2Bat%2B11.05.39.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="204" src="http://4.bp.blogspot.com/-gfgkoEkv-HY/VhuGvzIzqOI/AAAAAAABg6Q/BUKxbYx6IG0/s640/Screenshot%2B2015-10-12%2Bat%2B11.05.39.png" width="640" /></a>&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Here is the contents of each node: &lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-QdCMAYzfeZw/VhuGuzSG1fI/AAAAAAABg6M/b0b31YoUcPA/s1600/Node%2BRED%2B%2B%2Bemonpi.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="179" src="http://4.bp.blogspot.com/-QdCMAYzfeZw/VhuGuzSG1fI/AAAAAAABg6M/b0b31YoUcPA/s320/Node%2BRED%2B%2B%2Bemonpi.png" width="320" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;MQTT Node subscribing to emonhub mqtt topic on localhost (running node-RED on emonPi)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-ANX-AiX1Vg0/VhuGvI8h5wI/AAAAAAABg6U/wNu2U69oiwU/s1600/Node%2BRED%2B%2B%2Bemonpi1.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="293" src="http://4.bp.blogspot.com/-ANX-AiX1Vg0/VhuGvI8h5wI/AAAAAAABg6U/wNu2U69oiwU/s320/Node%2BRED%2B%2B%2Bemonpi1.png" width="320" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Separate node to split the MQTT data up into nodes based on ID: e.g emonTx = 10, emonPi = 5, emonTH = 19&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-wM8zp4WGrCk/VhuGvBsYP1I/AAAAAAABg6g/KJAxe8zI53M/s1600/Node%2BRED%2B%2B%2Bemonpi2.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="375" src="http://4.bp.blogspot.com/-wM8zp4WGrCk/VhuGvBsYP1I/AAAAAAABg6g/KJAxe8zI53M/s400/Node%2BRED%2B%2B%2Bemonpi2.png" width="400" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;CSV node to split up MQTT CSV string&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://4.bp.blogspot.com/-NemcPlwD1Ws/VhuGvVuEs6I/AAAAAAABg6Y/XkUBKmteqrE/s1600/Node%2BRED%2B%2B%2Bemonpi3.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="400" src="http://4.bp.blogspot.com/-NemcPlwD1Ws/VhuGvVuEs6I/AAAAAAABg6Y/XkUBKmteqrE/s400/Node%2BRED%2B%2B%2Bemonpi3.png" width="361" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;If function node&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;<a href="http://2.bp.blogspot.com/-1mzPm3DVvVU/VhuGvi-MFlI/AAAAAAABg6c/KCFuKqCADrE/s1600/Node%2BRED%2B%2B%2Bemonpi4.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="278" src="http://2.bp.blogspot.com/-1mzPm3DVvVU/VhuGvi-MFlI/AAAAAAABg6c/KCFuKqCADrE/s320/Node%2BRED%2B%2B%2Bemonpi4.png" width="320" /></a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;email node, enter your Gmail (or otherwise) SMTP login&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;Node-RED flow export, import by copy and pasting into import&gt;clipboard in Node-RED editor:<br /><br /><i><span style="font-size: xx-small;">[{“id”:”eb57a13e.14a86”,”type”:”mqtt-broker”,”broker”:”localhost”,”port”:”1883”,”clientid”:””},{“id”:”44c7eefa.bb381”,”type”:”mqtt in”,”name”:”MQTT: emonhub/rx/#”,”topic”:”emonhub/rx/#”,”broker”:”eb57a13e.14a86”,”x”:159,”y”:386,”z”:”fa6ca080.05936”,”wires”:[[“2c7fcc53.d38034”,”eb7e04d9.1481f8”]]},{“id”:”2c7fcc53.d38034”,”type”:”debug”,”name”:”RAW MQTT output: emonhub/rx/#”,”active”:false,”console”:”false”,”complete”:”topic”,”x”:242,”y”:461,”z”:”fa6ca080.05936”,”wires”:[]},{“id”:”eb7e04d9.1481f8”,”type”:”switch”,”name”:”Seperate Nodes”,”property”:”topic”,”rules”:[{“t”:”cont”,”v”:”5”},{“t”:”cont”,”v”:”19”},{“t”:”cont”,”v”:”20”}],”checkall”:”true”,”outputs”:3,”x”:343,”y”:317,”z”:”fa6ca080.05936”,”wires”:[[“b0618044.4f9e8”],[“9077dea0.6f882”],[]]},{“id”:”9077dea0.6f882”,”type”:”csv”,”name”:”emonTH 1: emonhub/19/values &gt; Decode MQTT CSV”,”sep”:”,”,”hdrin”:””,”hdrout”:””,”multi”:”one”,”ret”:”\n”,”temp”:”temp,temp_external,humidity,battery,pulsecount”,”x”:664,”y”:373,”z”:”fa6ca080.05936”,”wires”:[[“75ee731f.8a118c”]]},{“id”:”b0618044.4f9e8”,”type”:”csv”,”name”:”emonPi: emonhub/5/values &gt; Decode MQTT CSV”,”sep”:”,”,”hdrin”:””,”hdrout”:””,”multi”:”one”,”ret”:”\n”,”temp”:”power1,power2,power1_plus_2,Vrms,temp1,temp2,temp3,temp4,temp5,temp6,pulseCount”,”x”:647,”y”:236,”z”:”fa6ca080.05936”,”wires”:[[“cda897fa.325768”]]},{“id”:”cda897fa.325768”,”type”:”debug”,”name”:”Debug: emonPi Power1 output”,”active”:false,”console”:”false”,”complete”:”payload.power1”,”x”:1015,”y”:235,”z”:”fa6ca080.05936”,”wires”:[]},{“id”:”75ee731f.8a118c”,”type”:”function”,”name”:”If emonTH battery &lt; 1.7V”,”func”:”if (msg.payload.battery &lt; 1.7) {\n   return {payload:’WARNING: emonTH battery low  ‘+msg.payload.battery+’V’  };\n}”,”outputs”:1,”noerr”:0,”x”:1015,”y”:363,”z”:”fa6ca080.05936”,”wires”:[[“f8d8fd72.0727”]]},{“id”:”f8d8fd72.0727”,”type”:”delay”,”name”:”Limit 1 email per day”,”pauseType”:”rate”,”timeout”:”5”,”timeoutUnits”:”seconds”,”rate”:”1”,”rateUnits”:”day”,”randomFirst”:”1”,”randomLast”:”5”,”randomUnits”:”seconds”,”drop”:true,”x”:948,”y”:447,”z”:”fa6ca080.05936”,”wires”:[[“1d4154b2.e2beab”]]},{“id”:”1d4154b2.e2beab”,”type”:”e-mail”,”server”:”smtp.gmail.com”,”port”:”465”,”name”:””,”dname”:”Send warning email”,”x”:1198,”y”:439,”z”:”fa6ca080.05936”,”wires”:[]}]</span></i></p>
]]></content>
  </entry>
  
</feed>
